{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AssignmentModalComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.content);\n  }\n}\nfunction AssignmentModalComponent_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"textarea\", 19);\n    i0.ɵɵlistener(\"ngModelChange\", function AssignmentModalComponent_ng_template_22_Template_textarea_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.content = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.content);\n  }\n}\nfunction AssignmentModalComponent_div_24_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\\\"\", ctx_r7.existingSubmission == null ? null : ctx_r7.existingSubmission.feedback, \"\\\"\");\n  }\n}\nfunction AssignmentModalComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\", 9);\n    i0.ɵɵtext(2, \"Feedback & Grade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 20)(4, \"p\", 21);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, AssignmentModalComponent_div_24_p_6_Template, 2, 1, \"p\", 22);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r3.existingSubmission == null ? null : ctx_r3.existingSubmission.grade, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.existingSubmission == null ? null : ctx_r3.existingSubmission.feedback);\n  }\n}\nfunction AssignmentModalComponent_button_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AssignmentModalComponent_button_28_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleSubmit());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.existingSubmission ? \"Update Submission\" : \"Submit\", \" \");\n  }\n}\nexport let AssignmentModalComponent = /*#__PURE__*/(() => {\n  class AssignmentModalComponent {\n    assignment;\n    currentUser;\n    close = new EventEmitter();\n    submit = new EventEmitter();\n    existingSubmission;\n    content = '';\n    ngOnInit() {\n      this.existingSubmission = this.assignment.submissions.find(s => s.wardId === this.currentUser.id);\n      if (this.existingSubmission) {\n        this.content = this.existingSubmission.content;\n      }\n    }\n    handleSubmit() {\n      if (this.content.trim()) {\n        this.submit.emit(this.content);\n      }\n    }\n    static ɵfac = function AssignmentModalComponent_Factory(t) {\n      return new (t || AssignmentModalComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AssignmentModalComponent,\n      selectors: [[\"app-assignment-modal\"]],\n      inputs: {\n        assignment: \"assignment\",\n        currentUser: \"currentUser\"\n      },\n      outputs: {\n        close: \"close\",\n        submit: \"submit\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 29,\n      vars: 6,\n      consts: [[1, \"fixed\", \"inset-0\", \"bg-black\", \"bg-opacity-60\", \"flex\", \"justify-center\", \"items-center\", \"z-50\", \"p-4\"], [1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-xl\", \"p-6\", \"w-full\", \"max-w-2xl\", \"max-h-[90vh]\", \"flex\", \"flex-col\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-4\", \"pb-4\", \"border-b\", \"border-slate-200\", \"dark:border-slate-700\"], [1, \"text-2xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\"], [1, \"text-sm\", \"text-slate-500\", \"dark:text-slate-400\"], [1, \"text-slate-400\", \"hover:text-slate-600\", \"dark:hover:text-slate-200\", 3, \"click\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-6\", \"w-6\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M6 18L18 6M6 6l12 12\"], [1, \"space-y-4\", \"overflow-y-auto\", \"pr-2\", \"flex-grow\"], [1, \"font-semibold\", \"text-slate-700\", \"dark:text-slate-200\", \"mb-2\"], [1, \"text-sm\", \"text-slate-600\", \"dark:text-slate-300\", \"whitespace-pre-wrap\"], [1, \"border-slate-200\", \"dark:border-slate-700\"], [\"class\", \"bg-slate-50 dark:bg-slate-700/50 p-4 rounded-lg\", 4, \"ngIf\", \"ngIfElse\"], [\"submissionArea\", \"\"], [4, \"ngIf\"], [1, \"mt-6\", \"flex\", \"justify-end\", \"space-x-3\", \"pt-4\", \"border-t\", \"border-slate-200\", \"dark:border-slate-700\"], [1, \"px-4\", \"py-2\", \"border\", \"border-slate-300\", \"text-sm\", \"font-medium\", \"rounded-md\", 3, \"click\"], [\"class\", \"px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\", 3, \"click\", 4, \"ngIf\"], [1, \"bg-slate-50\", \"dark:bg-slate-700/50\", \"p-4\", \"rounded-lg\"], [\"rows\", \"12\", \"placeholder\", \"Type your submission here...\", 1, \"mt-1\", \"block\", \"w-full\", \"px-3\", \"py-2\", \"bg-white\", \"dark:bg-slate-700\", \"border\", \"border-slate-300\", \"dark:border-slate-600\", \"rounded-md\", \"shadow-sm\", 3, \"ngModel\", \"ngModelChange\"], [1, \"bg-slate-100\", \"dark:bg-slate-900/50\", \"p-4\", \"rounded-lg\", \"space-y-3\"], [1, \"text-2xl\", \"font-bold\", \"text-sky-600\", \"dark:text-sky-400\"], [\"class\", \"text-sm text-slate-600 dark:text-slate-300 italic\", 4, \"ngIf\"], [1, \"text-sm\", \"text-slate-600\", \"dark:text-slate-300\", \"italic\"], [1, \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", \"text-white\", \"bg-indigo-600\", \"hover:bg-indigo-700\", 3, \"click\"]],\n      template: function AssignmentModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\")(4, \"h2\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"p\", 4);\n          i0.ɵɵtext(7, \"Assignment\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function AssignmentModalComponent_Template_button_click_8_listener() {\n            return ctx.close.emit();\n          });\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(9, \"svg\", 6);\n          i0.ɵɵelement(10, \"path\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\")(13, \"h3\", 9);\n          i0.ɵɵtext(14, \"Instructions\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"p\", 10);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(17, \"hr\", 11);\n          i0.ɵɵelementStart(18, \"div\")(19, \"h3\", 9);\n          i0.ɵɵtext(20, \"Your Submission\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(21, AssignmentModalComponent_div_21_Template, 3, 1, \"div\", 12);\n          i0.ɵɵtemplate(22, AssignmentModalComponent_ng_template_22_Template, 1, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, AssignmentModalComponent_div_24_Template, 7, 2, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 15)(26, \"button\", 16);\n          i0.ɵɵlistener(\"click\", function AssignmentModalComponent_Template_button_click_26_listener() {\n            return ctx.close.emit();\n          });\n          i0.ɵɵtext(27, \" Close \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(28, AssignmentModalComponent_button_28_Template, 2, 1, \"button\", 17);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(23);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.assignment.title);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtextInterpolate(ctx.assignment.description);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (ctx.existingSubmission == null ? null : ctx.existingSubmission.grade) !== null)(\"ngIfElse\", _r1);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", (ctx.existingSubmission == null ? null : ctx.existingSubmission.grade) !== null);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", !ctx.existingSubmission || ctx.existingSubmission.grade === null);\n        }\n      },\n      dependencies: [CommonModule, i1.NgIf, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n  return AssignmentModalComponent;\n})();","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAgB,eAAe;AAC9E,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;;;;;;ICsBlCC,+BAA6H;IAC/CA,YAAa;IAAAA,iBAAI;;;;IAAjBA,eAAa;IAAbA,oCAAa;;;;;;IAGvFA,oCAKC;IAHGA;MAAAA;MAAA;MAAA;IAAA,EAAqB;IAGxBA,iBAAW;;;;IAHRA,wCAAqB;;;;;IAWxBA,6BAAkG;IAAAA,YAAoC;IAAAA,iBAAI;;;;IAAxCA,eAAoC;IAApCA,gHAAoC;;;;;IAJ5IA,2BAAgD;IACqBA,gCAAgB;IAAAA,iBAAK;IACvFA,+BAAwE;IACRA,YAAgC;IAAAA,iBAAI;IACjGA,6EAA0I;IAC7IA,iBAAM;;;;IAF0DA,eAAgC;IAAhCA,0GAAgC;IACzFA,eAAkC;IAAlCA,oGAAkC;;;;;;IAU7CA,kCAAoO;IAA3JA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAC/FA,YACF;IAAAA,iBAAS;;;;IADPA,eACF;IADEA,2FACF;;;AD1CR,WAAaC,wBAAwB;EAA/B,MAAOA,wBAAwB;IAC1BC,UAAU;IACVC,WAAW;IACVC,KAAK,GAAG,IAAIP,YAAY,EAAQ;IAChCQ,MAAM,GAAG,IAAIR,YAAY,EAAU;IAE7CS,kBAAkB;IAClBC,OAAO,GAAG,EAAE;IAEZC,QAAQ;MACN,IAAI,CAACF,kBAAkB,GAAG,IAAI,CAACJ,UAAU,CAACO,WAAW,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,IAAI,CAACT,WAAW,CAACU,EAAE,CAAC;MACjG,IAAI,IAAI,CAACP,kBAAkB,EAAE;QAC3B,IAAI,CAACC,OAAO,GAAG,IAAI,CAACD,kBAAkB,CAACC,OAAO;;IAElD;IAEAO,YAAY;MACV,IAAI,IAAI,CAACP,OAAO,CAACQ,IAAI,EAAE,EAAE;QACvB,IAAI,CAACV,MAAM,CAACW,IAAI,CAAC,IAAI,CAACT,OAAO,CAAC;;IAElC;;uBApBWN,wBAAwB;IAAA;;YAAxBA,wBAAwB;MAAAgB;MAAAC;QAAAhB;QAAAC;MAAA;MAAAgB;QAAAf;QAAAC;MAAA;MAAAe;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCXrCzB,8BAA4F;UAIpBA,YAAsB;UAAAA,iBAAK;UACzFA,4BAAsD;UAAAA,0BAAU;UAAAA,iBAAI;UAEtEA,iCAAqG;UAA7FA;YAAA,OAAS0B,gBAAY;UAAA,EAAC;UAC5B1B,mBAA8G;UAA9GA,8BAA8G;UAC5GA,2BAAiG;UACnGA,iBAAM;UAIVA,oBAAsD;UAAtDA,+BAAsD;UAEgBA,6BAAY;UAAAA,iBAAK;UACnFA,8BAA0E;UAAAA,aAA4B;UAAAA,iBAAI;UAG5GA,0BAAqD;UAErDA,4BAAK;UAC+DA,gCAAe;UAAAA,iBAAK;UACtFA,4EAEM;UACNA,6HAOc;UAChBA,iBAAM;UAELA,4EAMM;UAETA,iBAAM;UAENA,gCAAkG;UACxFA;YAAA,OAAS0B,gBAAY;UAAA,EAAC;UAC5B1B,wBACF;UAAAA,iBAAS;UACTA,kFAES;UACXA,iBAAM;;;;UAlD4DA,eAAsB;UAAtBA,0CAAsB;UAaVA,gBAA4B;UAA5BA,gDAA4B;UAOhGA,eAA0C;UAA1CA,sGAA0C;UAa3CA,eAAwC;UAAxCA,sGAAwC;UActCA,eAA8D;UAA9DA,uFAA8D;;;qBD3CnEF,YAAY,WAAEC,WAAW;MAAA4B;IAAA;;SAGxB1B,wBAAwB;AAAA","names":["EventEmitter","CommonModule","FormsModule","i0","AssignmentModalComponent","assignment","currentUser","close","submit","existingSubmission","content","ngOnInit","submissions","find","s","wardId","id","handleSubmit","trim","emit","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\components\\assignment-modal\\assignment-modal.component.ts","D:\\learning-portal\\frontend\\src\\app\\components\\assignment-modal\\assignment-modal.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Assignment, AssignmentSubmission, User } from '../../types';\r\n\r\n@Component({\r\n  selector: 'app-assignment-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './assignment-modal.component.html',\r\n})\r\nexport class AssignmentModalComponent implements OnInit {\r\n  @Input() assignment!: Assignment;\r\n  @Input() currentUser!: User;\r\n  @Output() close = new EventEmitter<void>();\r\n  @Output() submit = new EventEmitter<string>();\r\n\r\n  existingSubmission: AssignmentSubmission | undefined;\r\n  content = '';\r\n\r\n  ngOnInit(): void {\r\n    this.existingSubmission = this.assignment.submissions.find(s => s.wardId === this.currentUser.id);\r\n    if (this.existingSubmission) {\r\n      this.content = this.existingSubmission.content;\r\n    }\r\n  }\r\n\r\n  handleSubmit(): void {\r\n    if (this.content.trim()) {\r\n      this.submit.emit(this.content);\r\n    }\r\n  }\r\n}\r\n","<div class=\"fixed inset-0 bg-black bg-opacity-60 flex justify-center items-center z-50 p-4\">\n    <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-xl p-6 w-full max-w-2xl max-h-[90vh] flex flex-col\">\n      <div class=\"flex justify-between items-center mb-4 pb-4 border-b border-slate-200 dark:border-slate-700\">\n        <div>\n          <h2 class=\"text-2xl font-bold text-slate-800 dark:text-white\">{{ assignment.title }}</h2>\n          <p class=\"text-sm text-slate-500 dark:text-slate-400\">Assignment</p>\n        </div>\n        <button (click)=\"close.emit()\" class=\"text-slate-400 hover:text-slate-600 dark:hover:text-slate-200\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n          </svg>\n        </button>\n      </div>\n  \n      <div class=\"space-y-4 overflow-y-auto pr-2 flex-grow\">\n        <div>\n          <h3 class=\"font-semibold text-slate-700 dark:text-slate-200 mb-2\">Instructions</h3>\n          <p class=\"text-sm text-slate-600 dark:text-slate-300 whitespace-pre-wrap\">{{ assignment.description }}</p>\n        </div>\n  \n        <hr class=\"border-slate-200 dark:border-slate-700\" />\n  \n        <div>\n          <h3 class=\"font-semibold text-slate-700 dark:text-slate-200 mb-2\">Your Submission</h3>\n          <div *ngIf=\"existingSubmission?.grade !== null; else submissionArea\" class=\"bg-slate-50 dark:bg-slate-700/50 p-4 rounded-lg\">\n              <p class=\"text-sm text-slate-600 dark:text-slate-300 whitespace-pre-wrap\">{{ content }}</p>\n          </div>\n          <ng-template #submissionArea>\n              <textarea\n                  rows=\"12\"\n                  [(ngModel)]=\"content\"\n                  class=\"mt-1 block w-full px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md shadow-sm\"\n                  placeholder=\"Type your submission here...\"\n              ></textarea>\n          </ng-template>\n        </div>\n  \n         <div *ngIf=\"existingSubmission?.grade !== null\">\n            <h3 class=\"font-semibold text-slate-700 dark:text-slate-200 mb-2\">Feedback & Grade</h3>\n            <div class=\"bg-slate-100 dark:bg-slate-900/50 p-4 rounded-lg space-y-3\">\n               <p class=\"text-2xl font-bold text-sky-600 dark:text-sky-400\">{{ existingSubmission?.grade }}%</p>\n               <p *ngIf=\"existingSubmission?.feedback\" class=\"text-sm text-slate-600 dark:text-slate-300 italic\">\"{{ existingSubmission?.feedback }}\"</p>\n            </div>\n         </div>\n  \n      </div>\n  \n      <div class=\"mt-6 flex justify-end space-x-3 pt-4 border-t border-slate-200 dark:border-slate-700\">\n        <button (click)=\"close.emit()\" class=\"px-4 py-2 border border-slate-300 text-sm font-medium rounded-md\">\n          Close\n        </button>\n        <button *ngIf=\"!existingSubmission || existingSubmission.grade === null\" (click)=\"handleSubmit()\" class=\"px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\">\n          {{ existingSubmission ? 'Update Submission' : 'Submit' }}\n        </button>\n      </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}