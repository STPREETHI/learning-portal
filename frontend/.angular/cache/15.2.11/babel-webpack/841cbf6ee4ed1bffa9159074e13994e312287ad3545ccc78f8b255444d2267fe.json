{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuizTakerComponent } from '../quiz-taker/quiz-taker.component';\nimport { AssignmentModalComponent } from '../assignment-modal/assignment-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction WardDashboardComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function WardDashboardComponent_ng_container_0_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.activeQuiz = null);\n    });\n    i0.ɵɵtext(2, \" \\u2190 Back to Dashboard \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"app-quiz-taker\", 3);\n    i0.ɵɵlistener(\"complete\", function WardDashboardComponent_ng_container_0_Template_app_quiz_taker_complete_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.handleQuizComplete($event));\n    })(\"retake\", function WardDashboardComponent_ng_container_0_Template_app_quiz_taker_retake_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.activeQuiz = ctx_r6.activeQuiz);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"quiz\", ctx_r0.activeQuiz);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_app_assignment_modal_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-assignment-modal\", 19);\n    i0.ɵɵlistener(\"close\", function WardDashboardComponent_ng_template_1_app_assignment_modal_0_Template_app_assignment_modal_close_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r17.activeAssignment = null);\n    })(\"submit\", function WardDashboardComponent_ng_template_1_app_assignment_modal_0_Template_app_assignment_modal_submit_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.handleAssignmentSubmit($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"assignment\", ctx_r7.activeAssignment)(\"currentUser\", ctx_r7.currentUser);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 8);\n    i0.ɵɵtext(2, \"Your tutor hasn't assigned any tasks yet.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_1_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 29)(2, \"p\", 30);\n    i0.ɵɵtext(3, \"Latest Score\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const latestSubmission_r26 = ctx.ngIf;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", latestSubmission_r26.score.toFixed(0), \"%\");\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_1_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function WardDashboardComponent_ng_template_1_ng_template_15_div_1_ng_template_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const quiz_r22 = i0.ɵɵnextContext().$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r27.activeQuiz = quiz_r22);\n    });\n    i0.ɵɵtext(1, \"Start Quiz\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\")(2, \"span\", 24);\n    i0.ɵɵtext(3, \"Quiz\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 26);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 27);\n    i0.ɵɵtemplate(9, WardDashboardComponent_ng_template_1_ng_template_15_div_1_div_9_Template, 6, 1, \"div\", 0);\n    i0.ɵɵtemplate(10, WardDashboardComponent_ng_template_1_ng_template_15_div_1_ng_template_10_Template, 2, 0, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quiz_r22 = ctx.$implicit;\n    const _r24 = i0.ɵɵreference(11);\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(quiz_r22.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", quiz_r22.questions.length, \" Questions\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r20.getLatestSubmission(quiz_r22))(\"ngIfElse\", _r24);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_2_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function WardDashboardComponent_ng_template_1_ng_template_15_div_2_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const assignment_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r34 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r34.activeAssignment = assignment_r30);\n    });\n    i0.ɵɵtext(1, \"View Submission\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_2_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function WardDashboardComponent_ng_template_1_ng_template_15_div_2_ng_template_8_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const assignment_r30 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r37.activeAssignment = assignment_r30);\n    });\n    i0.ɵɵtext(1, \"Start Assignment\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"div\")(2, \"span\", 33);\n    i0.ɵɵtext(3, \"Assignment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 27);\n    i0.ɵɵtemplate(7, WardDashboardComponent_ng_template_1_ng_template_15_div_2_button_7_Template, 2, 0, \"button\", 34);\n    i0.ɵɵtemplate(8, WardDashboardComponent_ng_template_1_ng_template_15_div_2_ng_template_8_Template, 2, 0, \"ng-template\", null, 35, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const assignment_r30 = ctx.$implicit;\n    const _r32 = i0.ɵɵreference(9);\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(assignment_r30.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r21.getAssignmentSubmission(assignment_r30))(\"ngIfElse\", _r32);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, WardDashboardComponent_ng_template_1_ng_template_15_div_1_Template, 12, 4, \"div\", 22);\n    i0.ɵɵtemplate(2, WardDashboardComponent_ng_template_1_ng_template_15_div_2_Template, 10, 3, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.classroom.quizzes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.classroom.assignments);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ul_21_li_1__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 44);\n    i0.ɵɵelement(1, \"path\", 45);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ul_21_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 40)(1, \"div\", 41);\n    i0.ɵɵtemplate(2, WardDashboardComponent_ng_template_1_ul_21_li_1__svg_svg_2_Template, 2, 0, \"svg\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 43);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r41 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", item_r41.completed ? \"bg-green-500\" : \"bg-slate-300 dark:bg-slate-600\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r41.completed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", item_r41.completed ? \"text-slate-500\" : \"text-slate-800 dark:text-slate-200\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r41.topic);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ul_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 38);\n    i0.ɵɵtemplate(1, WardDashboardComponent_ng_template_1_ul_21_li_1_Template, 5, 4, \"li\", 39);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.classroom.course.syllabus);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 46);\n    i0.ɵɵtext(1, \"The course syllabus has not been added yet.\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"bg-green-100 text-green-800\": a0,\n    \"bg-red-100 text-red-800\": a1,\n    \"bg-yellow-100 text-yellow-800\": a2\n  };\n};\nfunction WardDashboardComponent_ng_template_1_ul_27_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 49)(1, \"span\", 50);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 51);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const record_r44 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, record_r44.date, \"EEEE, MMM d\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(6, _c0, record_r44.status === \"present\", record_r44.status === \"absent\", record_r44.status === \"late\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(record_r44.status);\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ul_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 47);\n    i0.ɵɵtemplate(1, WardDashboardComponent_ng_template_1_ul_27_li_1_Template, 6, 10, \"li\", 48);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 1, ctx_r14.attendanceHistory, 0, 5));\n  }\n}\nfunction WardDashboardComponent_ng_template_1_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 46);\n    i0.ɵɵtext(1, \"Your attendance has not been recorded yet.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WardDashboardComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, WardDashboardComponent_ng_template_1_app_assignment_modal_0_Template, 1, 2, \"app-assignment-modal\", 4);\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"div\")(3, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function WardDashboardComponent_ng_template_1_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.back.emit());\n    });\n    i0.ɵɵtext(4, \" \\u2190 Back to Classrooms \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h2\", 7);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"div\", 10)(11, \"div\", 11)(12, \"h3\", 12);\n    i0.ɵɵtext(13, \"Your Tasks\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, WardDashboardComponent_ng_template_1_div_14_Template, 3, 0, \"div\", 13);\n    i0.ɵɵtemplate(15, WardDashboardComponent_ng_template_1_ng_template_15_Template, 3, 2, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 5)(18, \"div\", 11)(19, \"h3\", 12);\n    i0.ɵɵtext(20, \"Syllabus\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, WardDashboardComponent_ng_template_1_ul_21_Template, 2, 1, \"ul\", 15);\n    i0.ɵɵtemplate(22, WardDashboardComponent_ng_template_1_ng_template_22_Template, 2, 0, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 11)(25, \"h3\", 12);\n    i0.ɵɵtext(26, \"Your Attendance\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(27, WardDashboardComponent_ng_template_1_ul_27_Template, 3, 5, \"ul\", 17);\n    i0.ɵɵtemplate(28, WardDashboardComponent_ng_template_1_ng_template_28_Template, 2, 0, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const _r9 = i0.ɵɵreference(16);\n    const _r12 = i0.ɵɵreference(23);\n    const _r15 = i0.ɵɵreference(29);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.activeAssignment);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.classroom.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.classroom.course.title);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.classroom.quizzes.length === 0 && ctx_r2.classroom.assignments.length === 0)(\"ngIfElse\", _r9);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.classroom.course.syllabus.length > 0)(\"ngIfElse\", _r12);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.attendanceHistory.length > 0)(\"ngIfElse\", _r15);\n  }\n}\nexport let WardDashboardComponent = /*#__PURE__*/(() => {\n  class WardDashboardComponent {\n    classroom;\n    currentUser;\n    quizCompleted = new EventEmitter();\n    assignmentSubmitted = new EventEmitter();\n    back = new EventEmitter();\n    activeQuiz = null;\n    activeAssignment = null;\n    get attendanceHistory() {\n      return this.classroom.attendance.map(record => ({\n        date: record.date,\n        status: record.statuses.find(s => s.wardId === this.currentUser.id)?.status\n      })).filter(record => record.status).sort((a, b) => b.date.localeCompare(a.date));\n    }\n    getLatestSubmission(quiz) {\n      return quiz.submissions.filter(s => s.wardId === this.currentUser.id).sort((a, b) => b.attempt - a.attempt)[0];\n    }\n    getAssignmentSubmission(assignment) {\n      return assignment.submissions.find(s => s.wardId === this.currentUser.id);\n    }\n    handleQuizComplete(submission) {\n      if (this.activeQuiz) {\n        this.quizCompleted.emit({\n          quizId: this.activeQuiz.id,\n          submission\n        });\n      }\n    }\n    handleAssignmentSubmit(content) {\n      if (this.activeAssignment) {\n        this.assignmentSubmitted.emit({\n          assignmentId: this.activeAssignment.id,\n          submission: {\n            content,\n            grade: null,\n            feedback: null\n          }\n        });\n        this.activeAssignment = null;\n      }\n    }\n    static ɵfac = function WardDashboardComponent_Factory(t) {\n      return new (t || WardDashboardComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WardDashboardComponent,\n      selectors: [[\"app-ward-dashboard\"]],\n      inputs: {\n        classroom: \"classroom\",\n        currentUser: \"currentUser\"\n      },\n      outputs: {\n        quizCompleted: \"quizCompleted\",\n        assignmentSubmitted: \"assignmentSubmitted\",\n        back: \"back\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[4, \"ngIf\", \"ngIfElse\"], [\"mainDashboard\", \"\"], [1, \"mb-4\", \"px-4\", \"py-2\", \"border\", \"border-slate-300\", \"text-sm\", \"font-medium\", \"rounded-md\", \"text-slate-700\", \"dark:text-slate-200\", \"bg-white\", \"dark:bg-slate-700\", \"hover:bg-slate-50\", \"dark:hover:bg-slate-600\", 3, \"click\"], [3, \"quiz\", \"complete\", \"retake\"], [3, \"assignment\", \"currentUser\", \"close\", \"submit\", 4, \"ngIf\"], [1, \"space-y-8\"], [1, \"text-sm\", \"font-medium\", \"text-sky-600\", \"dark:text-sky-400\", \"hover:underline\", \"mb-2\", 3, \"click\"], [1, \"text-3xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\"], [1, \"text-slate-500\", \"dark:text-slate-400\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-3\", \"gap-8\"], [1, \"lg:col-span-2\", \"space-y-8\"], [1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\"], [1, \"text-xl\", \"font-semibold\", \"text-slate-800\", \"dark:text-white\", \"mb-4\"], [\"class\", \"text-center py-8\", 4, \"ngIf\", \"ngIfElse\"], [\"taskGrid\", \"\"], [\"class\", \"space-y-2\", 4, \"ngIf\", \"ngIfElse\"], [\"noSyllabus\", \"\"], [\"class\", \"space-y-2 max-h-48 overflow-y-auto pr-2\", 4, \"ngIf\", \"ngIfElse\"], [\"noAttendance\", \"\"], [3, \"assignment\", \"currentUser\", \"close\", \"submit\"], [1, \"text-center\", \"py-8\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-6\"], [\"class\", \"bg-slate-50 dark:bg-slate-700/50 rounded-lg p-5 flex flex-col justify-between\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-lg\", \"p-5\", \"flex\", \"flex-col\", \"justify-between\"], [1, \"text-xs\", \"font-semibold\", \"uppercase\", \"text-sky-500\", \"dark:text-sky-400\"], [1, \"font-bold\", \"text-lg\", \"text-slate-800\", \"dark:text-white\", \"mt-1\"], [1, \"text-sm\", \"text-slate-500\", \"dark:text-slate-400\", \"mt-1\"], [1, \"mt-4\"], [\"startQuiz\", \"\"], [1, \"text-center\"], [1, \"text-xs\", \"text-slate-500\", \"dark:text-slate-400\"], [1, \"text-2xl\", \"font-bold\", \"text-sky-600\", \"dark:text-sky-400\"], [1, \"w-full\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", \"text-white\", \"bg-sky-600\", \"hover:bg-sky-700\", 3, \"click\"], [1, \"text-xs\", \"font-semibold\", \"uppercase\", \"text-indigo-500\", \"dark:text-indigo-400\"], [\"class\", \"w-full px-4 py-2 border border-slate-300 text-sm font-medium rounded-md shadow-sm\", 3, \"click\", 4, \"ngIf\", \"ngIfElse\"], [\"startAssignment\", \"\"], [1, \"w-full\", \"px-4\", \"py-2\", \"border\", \"border-slate-300\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", 3, \"click\"], [1, \"w-full\", \"px-4\", \"py-2\", \"border\", \"border-transparent\", \"text-sm\", \"font-medium\", \"rounded-md\", \"shadow-sm\", \"text-white\", \"bg-indigo-600\", \"hover:bg-indigo-700\", 3, \"click\"], [1, \"space-y-2\"], [\"class\", \"flex items-center\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\"], [1, \"w-5\", \"h-5\", \"rounded-full\", \"flex-shrink-0\", \"flex\", \"items-center\", \"justify-center\", \"mr-3\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"class\", \"h-3 w-3 text-white\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 4, \"ngIf\"], [3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"none\", \"viewBox\", \"0 0 24 24\", \"stroke\", \"currentColor\", 1, \"h-3\", \"w-3\", \"text-white\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"3\", \"d\", \"M5 13l4 4L19 7\"], [1, \"text-slate-500\", \"dark:text-slate-400\", \"text-center\", \"py-4\"], [1, \"space-y-2\", \"max-h-48\", \"overflow-y-auto\", \"pr-2\"], [\"class\", \"flex justify-between items-center text-sm p-2 bg-slate-50 dark:bg-slate-700/50 rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-between\", \"items-center\", \"text-sm\", \"p-2\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-md\"], [1, \"text-slate-600\", \"dark:text-slate-300\"], [1, \"font-semibold\", \"capitalize\", \"px-2\", \"py-0.5\", \"rounded-full\", \"text-xs\", 3, \"ngClass\"]],\n      template: function WardDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, WardDashboardComponent_ng_container_0_Template, 4, 1, \"ng-container\", 0);\n          i0.ɵɵtemplate(1, WardDashboardComponent_ng_template_1_Template, 30, 9, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.activeQuiz)(\"ngIfElse\", _r1);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.SlicePipe, i1.DatePipe, QuizTakerComponent, AssignmentModalComponent],\n      encapsulation: 2\n    });\n  }\n  return WardDashboardComponent;\n})();","map":{"version":3,"mappings":"AAAA,SAAmCA,YAAY,QAAQ,eAAe;AACtE,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,wBAAwB,QAAQ,gDAAgD;;;;;;ICJzFC,6BAAqD;IACnDA,iCAA0N;IAAlNA;MAAAA;MAAA;MAAA,0CAAsB,IAAI;IAAA,EAAC;IACjCA,0CACF;IAAAA,iBAAS;IACTA,yCAGqC;IADnCA;MAAAA;MAAA;MAAA,OAAYA,gDAA0B;IAAA,EAAC;MAAAA;MAAA;MAAA;IAAA;IAEzCA,iBAAiB;IACnBA,0BAAe;;;;IAJXA,eAAmB;IAAnBA,wCAAmB;;;;;;IAOrBA,gDAK4C;IAD1CA;MAAAA;MAAA;MAAA,iDAA4B,IAAI;IAAA,EAAC;MAAAA;MAAA;MAAA,OACvBA,qDAA8B;IAAA,EADP;IAEnCA,iBAAuB;;;;IAJrBA,oDAA+B;;;;;IAmBhBA,+BAA0H;IACzEA,yDAAyC;IAAAA,iBAAI;;;;;IAW/EA,2BAA2E;IAEbA,4BAAY;IAAAA,iBAAI;IACtEA,6BAA6D;IAAAA,YAAwC;IAAAA,iBAAI;;;;IAA5CA,eAAwC;IAAxCA,qEAAwC;;;;;;IAIzGA,kCAAuK;IAA/JA;MAAAA;MAAA;MAAA;MAAA;IAAA,EAA2B;IAAoIA,0BAAU;IAAAA,iBAAS;;;;;IAdtMA,+BAAkI;IAE7CA,oBAAI;IAAAA,iBAAO;IACxFA,8BAAkE;IAAAA,YAAgB;IAAAA,iBAAK;IACvFA,6BAA2D;IAAAA,YAAqC;IAAAA,iBAAI;IAExGA,+BAAkB;IACdA,0GAKM;IACNA,8JAEc;IAClBA,iBAAM;;;;;;IAbgEA,eAAgB;IAAhBA,oCAAgB;IACvBA,eAAqC;IAArCA,kEAAqC;IAG1FA,eAAgC;IAAhCA,4DAAgC;;;;;;IAiBtCA,kCAA4M;IAAlIA;MAAAA;MAAA;MAAA;MAAA;IAAA,EAAuC;IAA2FA,+BAAe;IAAAA,iBAAS;;;;;;IAEhOA,kCAAyL;IAAjLA;MAAAA;MAAA;MAAA;MAAA;IAAA,EAAuC;IAA0IA,gCAAgB;IAAAA,iBAAS;;;;;IAR9NA,+BAA4I;IAEjDA,0BAAU;IAAAA,iBAAO;IACpGA,8BAAkE;IAAAA,YAAsB;IAAAA,iBAAK;IAEjGA,+BAAkB;IACdA,iHAAoO;IACpOA,4JAEc;IAClBA,iBAAM;;;;;;IAPgEA,eAAsB;IAAtBA,0CAAsB;IAG/EA,eAA2C;IAA3CA,sEAA2C;;;;;IAzBhEA,+BAAmD;IAC/CA,sGAiBM;IACNA,sGAWM;IACVA,iBAAM;;;;IA9BoBA,eAAoB;IAApBA,mDAAoB;IAkBdA,eAAwB;IAAxBA,uDAAwB;;;;;IAsBhDA,mBAAgJ;IAAhJA,+BAAgJ;IAAAA,2BAA2F;IAAAA,iBAAM;;;;;IAFzPA,8BAA6E;IAErEA,sGAAiP;IACrPA,iBAAM;IACNA,gCAA2F;IAAAA,YAAgB;IAAAA,iBAAO;;;;IAH5BA,eAA8E;IAA9EA,gGAA8E;IAC1JA,eAAoB;IAApBA,yCAAoB;IAExBA,eAAoF;IAApFA,sGAAoF;IAACA,eAAgB;IAAhBA,oCAAgB;;;;;IALnHA,8BAAoF;IAChFA,0FAKK;IACTA,iBAAK;;;;IANoBA,eAA4B;IAA5BA,2DAA4B;;;;;IAO5BA,6BAA+D;IAAAA,2DAA2C;IAAAA,iBAAI;;;;;;;;;;;;IAKnIA,8BAA2J;IACtGA,YAAsC;;IAAAA,iBAAO;IAC9FA,gCAIK;IAAAA,YAAmB;IAAAA,iBAAO;;;;IALkBA,eAAsC;IAAtCA,0EAAsC;IACfA,eAIpE;IAJoEA,mJAIpE;IAACA,eAAmB;IAAnBA,uCAAmB;;;;;IAP/BA,8BAA4G;IACzGA,2FAOK;;IACTA,iBAAK;;;;IARsBA,eAAgC;IAAhCA,+EAAgC;;;;;IAShCA,6BAA+D;IAAAA,0DAA0C;IAAAA,iBAAI;;;;;;IArFxJA,uHAMuB;IAEvBA,8BAAuB;IAEPA;MAAAA;MAAA;MAAA,OAASA,kCAAW;IAAA,EAAC;IACzBA,2CACJ;IAAAA,iBAAS;IACTA,6BAA8D;IAAAA,YAAoB;IAAAA,iBAAK;IACvFA,4BAA8C;IAAAA,YAA4B;IAAAA,iBAAI;IAGlFA,8BAAmD;IAG+BA,2BAAU;IAAAA,iBAAK;IACpFA,wFAEK;IACNA,yIAiCc;IAClBA,iBAAM;IAEVA,+BAAuB;IAEuDA,yBAAQ;IAAAA,iBAAK;IACnFA,sFAOK;IACLA,yIAAqJ;IACzJA,iBAAM;IACNA,gCAAiE;IACSA,gCAAe;IAAAA,iBAAK;IACzFA,sFASI;IACLA,yIAAsJ;IAC1JA,iBAAM;;;;;;;IArFfA,8CAAsB;IAY6CA,eAAoB;IAApBA,2CAAoB;IACpCA,eAA4B;IAA5BA,mDAA4B;IAO3DA,eAA4E;IAA5EA,yGAA4E;IA0C9EA,eAA4C;IAA5CA,kEAA4C;IAY3CA,eAAoC;IAApCA,0DAAoC;;;AD3E5D,WAAaC,sBAAsB;EAA7B,MAAOA,sBAAsB;IACxBC,SAAS;IACTC,WAAW;IACVC,aAAa,GAAG,IAAIR,YAAY,EAAgE;IAChGS,mBAAmB,GAAG,IAAIT,YAAY,EAA4E;IAClHU,IAAI,GAAG,IAAIV,YAAY,EAAQ;IAEzCW,UAAU,GAAgB,IAAI;IAC9BC,gBAAgB,GAAsB,IAAI;IAE1C,IAAIC,iBAAiB;MACnB,OAAO,IAAI,CAACP,SAAS,CAACQ,UAAU,CAC7BC,GAAG,CAACC,MAAM,KAAK;QACdC,IAAI,EAAED,MAAM,CAACC,IAAI;QACjBC,MAAM,EAAEF,MAAM,CAACG,QAAQ,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,IAAI,CAACf,WAAW,CAACgB,EAAE,CAAC,EAAEL;OACtE,CAAC,CAAC,CACFM,MAAM,CAACR,MAAM,IAAIA,MAAM,CAACE,MAAM,CAAC,CAC/BO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACV,IAAI,CAACW,aAAa,CAACF,CAAC,CAACT,IAAI,CAAC,CAAC;IACjD;IAEAY,mBAAmB,CAACC,IAAU;MAC5B,OAAOA,IAAI,CAACC,WAAW,CACpBP,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,IAAI,CAACf,WAAW,CAACgB,EAAE,CAAC,CAC7CE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACK,OAAO,GAAGN,CAAC,CAACM,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C;IAEAC,uBAAuB,CAACC,UAAsB;MAC5C,OAAOA,UAAU,CAACH,WAAW,CAACX,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,MAAM,KAAK,IAAI,CAACf,WAAW,CAACgB,EAAE,CAAC;IAC3E;IAEAY,kBAAkB,CAACC,UAA0C;MAC3D,IAAI,IAAI,CAACzB,UAAU,EAAE;QACnB,IAAI,CAACH,aAAa,CAAC6B,IAAI,CAAC;UAAEC,MAAM,EAAE,IAAI,CAAC3B,UAAU,CAACY,EAAE;UAAEa;QAAU,CAAE,CAAC;;IAEvE;IAEAG,sBAAsB,CAACC,OAAe;MACpC,IAAI,IAAI,CAAC5B,gBAAgB,EAAE;QACzB,IAAI,CAACH,mBAAmB,CAAC4B,IAAI,CAAC;UAC5BI,YAAY,EAAE,IAAI,CAAC7B,gBAAgB,CAACW,EAAE;UACtCa,UAAU,EAAE;YAAEI,OAAO;YAAEE,KAAK,EAAE,IAAI;YAAEC,QAAQ,EAAE;UAAI;SACnD,CAAC;QACF,IAAI,CAAC/B,gBAAgB,GAAG,IAAI;;IAEhC;;uBA5CWP,sBAAsB;IAAA;;YAAtBA,sBAAsB;MAAAuC;MAAAC;QAAAvC;QAAAC;MAAA;MAAAuC;QAAAtC;QAAAC;QAAAC;MAAA;MAAAqC;MAAAC;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCZnChD,yFASe;UAEfA,yHA2Fc;;;;UAtGCA,qCAAkB;;;qBDSrBH,YAAY,8DAAEC,kBAAkB,EAAEC,wBAAwB;MAAAkD;IAAA;;SAGzDhD,sBAAsB;AAAA","names":["EventEmitter","CommonModule","QuizTakerComponent","AssignmentModalComponent","i0","WardDashboardComponent","classroom","currentUser","quizCompleted","assignmentSubmitted","back","activeQuiz","activeAssignment","attendanceHistory","attendance","map","record","date","status","statuses","find","s","wardId","id","filter","sort","a","b","localeCompare","getLatestSubmission","quiz","submissions","attempt","getAssignmentSubmission","assignment","handleQuizComplete","submission","emit","quizId","handleAssignmentSubmit","content","assignmentId","grade","feedback","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\components\\ward-dashboard\\ward-dashboard.component.ts","D:\\learning-portal\\frontend\\src\\app\\components\\ward-dashboard\\ward-dashboard.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Quiz, Classroom, WardSubmission, Assignment, AssignmentSubmission, User } from '../../types';\r\nimport { QuizTakerComponent } from '../quiz-taker/quiz-taker.component';\r\nimport { AssignmentModalComponent } from '../assignment-modal/assignment-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-ward-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, QuizTakerComponent, AssignmentModalComponent],\r\n  templateUrl: './ward-dashboard.component.html',\r\n})\r\nexport class WardDashboardComponent {\r\n  @Input() classroom!: Classroom;\r\n  @Input() currentUser!: User;\r\n  @Output() quizCompleted = new EventEmitter<{quizId: string, submission: Omit<WardSubmission, 'wardId'>}>();\r\n  @Output() assignmentSubmitted = new EventEmitter<{assignmentId: string, submission: Omit<AssignmentSubmission, 'wardId'>}>();\r\n  @Output() back = new EventEmitter<void>();\r\n\r\n  activeQuiz: Quiz | null = null;\r\n  activeAssignment: Assignment | null = null;\r\n\r\n  get attendanceHistory() {\r\n    return this.classroom.attendance\r\n      .map(record => ({\r\n        date: record.date,\r\n        status: record.statuses.find(s => s.wardId === this.currentUser.id)?.status\r\n      }))\r\n      .filter(record => record.status)\r\n      .sort((a, b) => b.date.localeCompare(a.date));\r\n  }\r\n\r\n  getLatestSubmission(quiz: Quiz): WardSubmission | undefined {\r\n    return quiz.submissions\r\n      .filter(s => s.wardId === this.currentUser.id)\r\n      .sort((a, b) => b.attempt - a.attempt)[0];\r\n  }\r\n\r\n  getAssignmentSubmission(assignment: Assignment): AssignmentSubmission | undefined {\r\n    return assignment.submissions.find(s => s.wardId === this.currentUser.id);\r\n  }\r\n\r\n  handleQuizComplete(submission: Omit<WardSubmission, 'wardId'>): void {\r\n    if (this.activeQuiz) {\r\n      this.quizCompleted.emit({ quizId: this.activeQuiz.id, submission });\r\n    }\r\n  }\r\n\r\n  handleAssignmentSubmit(content: string): void {\r\n    if (this.activeAssignment) {\r\n      this.assignmentSubmitted.emit({\r\n        assignmentId: this.activeAssignment.id,\r\n        submission: { content, grade: null, feedback: null }\r\n      });\r\n      this.activeAssignment = null;\r\n    }\r\n  }\r\n}\r\n","<ng-container *ngIf=\"activeQuiz; else mainDashboard\">\n  <button (click)=\"activeQuiz = null\" class=\"mb-4 px-4 py-2 border border-slate-300 text-sm font-medium rounded-md text-slate-700 dark:text-slate-200 bg-white dark:bg-slate-700 hover:bg-slate-50 dark:hover:bg-slate-600\">\n    &larr; Back to Dashboard\n  </button>\n  <app-quiz-taker \n    [quiz]=\"activeQuiz\" \n    (complete)=\"handleQuizComplete($event)\" \n    (retake)=\"activeQuiz = activeQuiz\">\n  </app-quiz-taker>\n</ng-container>\n\n<ng-template #mainDashboard>\n  <app-assignment-modal \n    *ngIf=\"activeAssignment\"\n    [assignment]=\"activeAssignment\"\n    [currentUser]=\"currentUser\"\n    (close)=\"activeAssignment = null\"\n    (submit)=\"handleAssignmentSubmit($event)\">\n  </app-assignment-modal>\n\n  <div class=\"space-y-8\">\n      <div>\n          <button (click)=\"back.emit()\" class=\"text-sm font-medium text-sky-600 dark:text-sky-400 hover:underline mb-2\">\n              &larr; Back to Classrooms\n          </button>\n          <h2 class=\"text-3xl font-bold text-slate-800 dark:text-white\">{{ classroom.name }}</h2>\n          <p class=\"text-slate-500 dark:text-slate-400\">{{ classroom.course.title }}</p>\n      </div>\n\n      <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div class=\"lg:col-span-2 space-y-8\">\n              <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                  <h3 class=\"text-xl font-semibold text-slate-800 dark:text-white mb-4\">Your Tasks</h3>\n                   <div *ngIf=\"classroom.quizzes.length === 0 && classroom.assignments.length === 0; else taskGrid\" class=\"text-center py-8\">\n                      <p class=\"text-slate-500 dark:text-slate-400\">Your tutor hasn't assigned any tasks yet.</p>\n                  </div>\n                  <ng-template #taskGrid>\n                      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                          <div *ngFor=\"let quiz of classroom.quizzes\" class=\"bg-slate-50 dark:bg-slate-700/50 rounded-lg p-5 flex flex-col justify-between\">\n                              <div>\n                                  <span class=\"text-xs font-semibold uppercase text-sky-500 dark:text-sky-400\">Quiz</span>\n                                  <h4 class=\"font-bold text-lg text-slate-800 dark:text-white mt-1\">{{ quiz.title }}</h4>\n                                  <p class=\"text-sm text-slate-500 dark:text-slate-400 mt-1\">{{ quiz.questions.length }} Questions</p>\n                              </div>\n                              <div class=\"mt-4\">\n                                  <div *ngIf=\"getLatestSubmission(quiz) as latestSubmission; else startQuiz\">\n                                      <div class=\"text-center\">\n                                          <p class=\"text-xs text-slate-500 dark:text-slate-400\">Latest Score</p>\n                                          <p class=\"text-2xl font-bold text-sky-600 dark:text-sky-400\">{{ latestSubmission.score.toFixed(0) }}%</p>\n                                      </div>\n                                  </div>\n                                  <ng-template #startQuiz>\n                                      <button (click)=\"activeQuiz = quiz\" class=\"w-full px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-sky-600 hover:bg-sky-700\">Start Quiz</button>\n                                  </ng-template>\n                              </div>\n                          </div>\n                          <div *ngFor=\"let assignment of classroom.assignments\" class=\"bg-slate-50 dark:bg-slate-700/50 rounded-lg p-5 flex flex-col justify-between\">\n                              <div>\n                                  <span class=\"text-xs font-semibold uppercase text-indigo-500 dark:text-indigo-400\">Assignment</span>\n                                  <h4 class=\"font-bold text-lg text-slate-800 dark:text-white mt-1\">{{ assignment.title }}</h4>\n                              </div>\n                              <div class=\"mt-4\">\n                                  <button *ngIf=\"getAssignmentSubmission(assignment); else startAssignment\" (click)=\"activeAssignment = assignment\" class=\"w-full px-4 py-2 border border-slate-300 text-sm font-medium rounded-md shadow-sm\">View Submission</button>\n                                  <ng-template #startAssignment>\n                                      <button (click)=\"activeAssignment = assignment\" class=\"w-full px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700\">Start Assignment</button>\n                                  </ng-template>\n                              </div>\n                          </div>\n                      </div>\n                  </ng-template>\n              </div>\n          </div>\n          <div class=\"space-y-8\">\n               <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                  <h3 class=\"text-xl font-semibold text-slate-800 dark:text-white mb-4\">Syllabus</h3>\n                  <ul *ngIf=\"classroom.course.syllabus.length > 0; else noSyllabus\" class=\"space-y-2\">\n                      <li *ngFor=\"let item of classroom.course.syllabus\" class=\"flex items-center\">\n                          <div class=\"w-5 h-5 rounded-full flex-shrink-0 flex items-center justify-center mr-3\" [ngClass]=\"item.completed ? 'bg-green-500' : 'bg-slate-300 dark:bg-slate-600'\">\n                              <svg *ngIf=\"item.completed\" xmlns=\"http://www.w3.org/2000/svg\" class=\"h-3 w-3 text-white\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"3\" d=\"M5 13l4 4L19 7\" /></svg>\n                          </div>\n                          <span [ngClass]=\"item.completed ? 'text-slate-500' : 'text-slate-800 dark:text-slate-200'\">{{ item.topic }}</span>\n                      </li>\n                  </ul>\n                  <ng-template #noSyllabus><p class=\"text-slate-500 dark:text-slate-400 text-center py-4\">The course syllabus has not been added yet.</p></ng-template>\n              </div>\n              <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                  <h3 class=\"text-xl font-semibold text-slate-800 dark:text-white mb-4\">Your Attendance</h3>\n                   <ul *ngIf=\"attendanceHistory.length > 0; else noAttendance\" class=\"space-y-2 max-h-48 overflow-y-auto pr-2\">\n                      <li *ngFor=\"let record of attendanceHistory | slice:0:5\" class=\"flex justify-between items-center text-sm p-2 bg-slate-50 dark:bg-slate-700/50 rounded-md\">\n                          <span class=\"text-slate-600 dark:text-slate-300\">{{ record.date | date:'EEEE, MMM d' }}</span>\n                          <span class=\"font-semibold capitalize px-2 py-0.5 rounded-full text-xs\" [ngClass]=\"{\n                              'bg-green-100 text-green-800': record.status === 'present',\n                              'bg-red-100 text-red-800': record.status === 'absent',\n                              'bg-yellow-100 text-yellow-800': record.status === 'late'\n                            }\">{{ record.status }}</span>\n                      </li>\n                  </ul>\n                  <ng-template #noAttendance><p class=\"text-slate-500 dark:text-slate-400 text-center py-4\">Your attendance has not been recorded yet.</p></ng-template>\n              </div>\n          </div>\n      </div>\n  </div>\n</ng-template>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}