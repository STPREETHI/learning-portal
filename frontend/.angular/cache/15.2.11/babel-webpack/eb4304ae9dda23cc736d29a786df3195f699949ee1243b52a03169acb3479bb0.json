{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuizGeneratorComponent } from '../quiz-generator/quiz-generator.component';\nimport { AssignmentCreatorComponent } from '../assignment-creator/assignment-creator.component';\nimport { AttendanceTrackerComponent } from '../attendance-tracker/attendance-tracker.component';\nimport { QuizAnalyticsComponent } from '../quiz-analytics/quiz-analytics.component';\nimport { LeaderboardComponent } from '../leaderboard/leaderboard.component';\nimport { AssignmentGradingModalComponent } from '../assignment-grading-modal/assignment-grading-modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction TutorDashboardComponent_app_assignment_grading_modal_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-assignment-grading-modal\", 13);\n    i0.ɵɵlistener(\"close\", function TutorDashboardComponent_app_assignment_grading_modal_0_Template_app_assignment_grading_modal_close_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      ctx_r7.selectedAssignment = null;\n      return i0.ɵɵresetView(ctx_r7.selectedSubmission = null);\n    })(\"saveGrade\", function TutorDashboardComponent_app_assignment_grading_modal_0_Template_app_assignment_grading_modal_saveGrade_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.handleSaveGrade($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"assignment\", ctx_r0.selectedAssignment)(\"submission\", ctx_r0.selectedSubmission)(\"wardName\", ctx_r0.getWardName(ctx_r0.selectedSubmission.wardId));\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"border-sky-500 text-sky-600\": a0,\n    \"border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300\": a1\n  };\n};\nfunction TutorDashboardComponent_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TutorDashboardComponent_button_17_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const tab_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.activeTab = tab_r10.id);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.activeTab === tab_r10.id, ctx_r1.activeTab !== tab_r10.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tab_r10.name, \" \");\n  }\n}\nfunction TutorDashboardComponent_div_20_app_leaderboard_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-leaderboard\", 20);\n  }\n  if (rf & 2) {\n    const quiz_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"quiz\", quiz_r14)(\"wards\", ctx_r13.enrolledWards);\n  }\n}\nfunction TutorDashboardComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 15)(2, \"div\", 16)(3, \"app-quiz-generator\", 17);\n    i0.ɵɵlistener(\"quizGenerated\", function TutorDashboardComponent_div_20_Template_app_quiz_generator_quizGenerated_3_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.quizCreated.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 18);\n    i0.ɵɵtemplate(5, TutorDashboardComponent_div_20_app_leaderboard_5_Template, 1, 2, \"app-leaderboard\", 19);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.classroom.quizzes);\n  }\n}\nfunction TutorDashboardComponent_div_21_div_5_ul_8_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 33)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function TutorDashboardComponent_div_21_div_5_ul_8_li_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const sub_r23 = restoredCtx.$implicit;\n      const assignment_r18 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.handleGradeClick(assignment_r18, sub_r23));\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sub_r23 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r22.getWardName(sub_r23.wardId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", sub_r23.grade !== null ? \"View / Edit Grade (\" + sub_r23.grade + \"%)\" : \"Grade Now\", \" \");\n  }\n}\nfunction TutorDashboardComponent_div_21_div_5_ul_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 31);\n    i0.ɵɵtemplate(1, TutorDashboardComponent_div_21_div_5_ul_8_li_1_Template, 5, 2, \"li\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const assignment_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", assignment_r18.submissions);\n  }\n}\nfunction TutorDashboardComponent_div_21_div_5_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 35);\n    i0.ɵɵtext(1, \"No submissions yet.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TutorDashboardComponent_div_21_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24)(1, \"h4\", 25);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 26);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 27)(6, \"h5\", 28);\n    i0.ɵɵtext(7, \"Submissions:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, TutorDashboardComponent_div_21_div_5_ul_8_Template, 2, 1, \"ul\", 29);\n    i0.ɵɵtemplate(9, TutorDashboardComponent_div_21_div_5_ng_template_9_Template, 2, 0, \"ng-template\", null, 30, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const assignment_r18 = ctx.$implicit;\n    const _r20 = i0.ɵɵreference(10);\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(assignment_r18.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", assignment_r18.submissions.length, \" / \", ctx_r17.enrolledWards.length, \" submitted\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", assignment_r18.submissions.length > 0)(\"ngIfElse\", _r20);\n  }\n}\nfunction TutorDashboardComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 15)(2, \"div\", 16)(3, \"app-assignment-creator\", 21);\n    i0.ɵɵlistener(\"assignmentCreated\", function TutorDashboardComponent_div_21_Template_app_assignment_creator_assignmentCreated_3_listener($event) {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.assignmentCreated.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 22);\n    i0.ɵɵtemplate(5, TutorDashboardComponent_div_21_div_5_Template, 11, 5, \"div\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.classroom.assignments);\n  }\n}\nfunction TutorDashboardComponent_div_22_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ward_r34 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ward_r34.name);\n  }\n}\nfunction TutorDashboardComponent_div_22_ul_10_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 42)(1, \"span\", 43);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TutorDashboardComponent_div_22_ul_10_li_1_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r38);\n      const ward_r36 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r37.approveRequest.emit(ward_r36.id));\n    });\n    i0.ɵɵtext(4, \"Approve\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ward_r36 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ward_r36.name);\n  }\n}\nfunction TutorDashboardComponent_div_22_ul_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 31);\n    i0.ɵɵtemplate(1, TutorDashboardComponent_div_22_ul_10_li_1_Template, 5, 1, \"li\", 41);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r31.joinRequestWards);\n  }\n}\nfunction TutorDashboardComponent_div_22_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1, \"No pending join requests.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TutorDashboardComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 36)(2, \"div\", 24)(3, \"h3\", 37);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\", 31);\n    i0.ɵɵtemplate(6, TutorDashboardComponent_div_22_li_6_Template, 2, 1, \"li\", 38);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 24)(8, \"h3\", 37);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, TutorDashboardComponent_div_22_ul_10_Template, 2, 1, \"ul\", 29);\n    i0.ɵɵtemplate(11, TutorDashboardComponent_div_22_ng_template_11_Template, 2, 0, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r32 = i0.ɵɵreference(12);\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Enrolled Students (\", ctx_r4.enrolledWards.length, \")\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.enrolledWards);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Join Requests (\", ctx_r4.joinRequestWards.length, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.joinRequestWards.length > 0)(\"ngIfElse\", _r32);\n  }\n}\nfunction TutorDashboardComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-attendance-tracker\", 45);\n    i0.ɵɵlistener(\"updateAttendance\", function TutorDashboardComponent_div_23_Template_app_attendance_tracker_updateAttendance_1_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.updateAttendance.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"wards\", ctx_r5.enrolledWards)(\"attendanceRecords\", ctx_r5.classroom.attendance);\n  }\n}\nfunction TutorDashboardComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-quiz-analytics\", 46);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"classroom\", ctx_r6.classroom)(\"allWards\", ctx_r6.allWards);\n  }\n}\nexport let TutorDashboardComponent = /*#__PURE__*/(() => {\n  class TutorDashboardComponent {\n    classroom;\n    allWards = [];\n    back = new EventEmitter();\n    quizCreated = new EventEmitter();\n    assignmentCreated = new EventEmitter();\n    updateAttendance = new EventEmitter();\n    approveRequest = new EventEmitter();\n    gradeAssignment = new EventEmitter();\n    activeTab = 'quizzes';\n    selectedAssignment = null;\n    selectedSubmission = null;\n    enrolledWards = [];\n    joinRequestWards = [];\n    tabs = [{\n      id: 'quizzes',\n      name: 'Quizzes'\n    }, {\n      id: 'assignments',\n      name: 'Assignments'\n    }, {\n      id: 'students',\n      name: 'Students'\n    }, {\n      id: 'attendance',\n      name: 'Attendance'\n    }, {\n      id: 'analytics',\n      name: 'Analytics'\n    }];\n    ngOnChanges(changes) {\n      if (changes['classroom'] || changes['allWards']) {\n        this.updateWardLists();\n      }\n    }\n    updateWardLists() {\n      const wardIdSet = new Set(this.classroom.wardIds);\n      const joinRequestIdSet = new Set(this.classroom.joinRequests);\n      this.enrolledWards = this.allWards.filter(w => wardIdSet.has(w.id));\n      this.joinRequestWards = this.allWards.filter(w => joinRequestIdSet.has(w.id));\n    }\n    handleGradeClick(assignment, submission) {\n      this.selectedAssignment = assignment;\n      this.selectedSubmission = submission;\n    }\n    handleSaveGrade(event) {\n      if (this.selectedAssignment) {\n        this.gradeAssignment.emit({\n          assignmentId: this.selectedAssignment.id,\n          ...event\n        });\n        this.selectedAssignment = null;\n        this.selectedSubmission = null;\n      }\n    }\n    getWardName(wardId) {\n      return this.allWards.find(w => w.id === wardId)?.name || 'Unknown';\n    }\n    static ɵfac = function TutorDashboardComponent_Factory(t) {\n      return new (t || TutorDashboardComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TutorDashboardComponent,\n      selectors: [[\"app-tutor-dashboard\"]],\n      inputs: {\n        classroom: \"classroom\",\n        allWards: \"allWards\"\n      },\n      outputs: {\n        back: \"back\",\n        quizCreated: \"quizCreated\",\n        assignmentCreated: \"assignmentCreated\",\n        updateAttendance: \"updateAttendance\",\n        approveRequest: \"approveRequest\",\n        gradeAssignment: \"gradeAssignment\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 25,\n      vars: 11,\n      consts: [[3, \"assignment\", \"submission\", \"wardName\", \"close\", \"saveGrade\", 4, \"ngIf\"], [1, \"space-y-8\"], [1, \"text-sm\", \"font-medium\", \"text-sky-600\", \"dark:text-sky-400\", \"hover:underline\", \"mb-2\", 3, \"click\"], [1, \"md:flex\", \"justify-between\", \"items-center\"], [1, \"text-3xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\"], [1, \"text-slate-500\", \"dark:text-slate-400\"], [1, \"mt-2\", \"md:mt-0\", \"text-sm\", \"font-mono\", \"bg-slate-100\", \"dark:bg-slate-700\", \"p-2\", \"rounded-md\"], [1, \"font-bold\", \"text-sky-600\", \"dark:text-sky-400\"], [1, \"border-b\", \"border-slate-200\", \"dark:border-slate-700\"], [\"aria-label\", \"Tabs\", 1, \"-mb-px\", \"flex\", \"space-x-6\"], [\"class\", \"whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [3, \"assignment\", \"submission\", \"wardName\", \"close\", \"saveGrade\"], [1, \"whitespace-nowrap\", \"py-4\", \"px-1\", \"border-b-2\", \"font-medium\", \"text-sm\", 3, \"ngClass\", \"click\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-3\", \"gap-8\"], [1, \"lg:col-span-1\"], [3, \"quizGenerated\"], [1, \"lg:col-span-2\", \"space-y-8\"], [3, \"quiz\", \"wards\", 4, \"ngFor\", \"ngForOf\"], [3, \"quiz\", \"wards\"], [3, \"assignmentCreated\"], [1, \"lg:col-span-2\", \"space-y-6\"], [\"class\", \"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\"], [1, \"text-lg\", \"font-bold\", \"text-slate-800\", \"dark:text-white\"], [1, \"text-sm\", \"text-slate-500\", \"dark:text-slate-400\", \"mt-1\"], [1, \"mt-4\"], [1, \"text-sm\", \"font-semibold\", \"mb-2\"], [\"class\", \"space-y-2\", 4, \"ngIf\", \"ngIfElse\"], [\"noSubmissions\", \"\"], [1, \"space-y-2\"], [\"class\", \"flex justify-between items-center p-2 bg-slate-50 dark:bg-slate-700/50 rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-between\", \"items-center\", \"p-2\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-md\"], [1, \"text-sm\", \"font-medium\", \"text-sky-600\", \"hover:underline\", 3, \"click\"], [1, \"text-sm\", \"text-slate-400\"], [1, \"grid\", \"grid-cols-1\", \"md:grid-cols-2\", \"gap-8\"], [1, \"text-xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\", \"mb-4\"], [\"class\", \"p-3 bg-slate-50 dark:bg-slate-700/50 rounded-md font-medium\", 4, \"ngFor\", \"ngForOf\"], [\"noRequests\", \"\"], [1, \"p-3\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-md\", \"font-medium\"], [\"class\", \"flex justify-between items-center p-3 bg-slate-50 dark:bg-slate-700/50 rounded-md\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-between\", \"items-center\", \"p-3\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-md\"], [1, \"font-medium\"], [1, \"px-3\", \"py-1\", \"text-xs\", \"font-semibold\", \"rounded-md\", \"text-white\", \"bg-green-600\", \"hover:bg-green-700\", 3, \"click\"], [3, \"wards\", \"attendanceRecords\", \"updateAttendance\"], [3, \"classroom\", \"allWards\"]],\n      template: function TutorDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TutorDashboardComponent_app_assignment_grading_modal_0_Template, 1, 3, \"app-assignment-grading-modal\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\")(3, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function TutorDashboardComponent_Template_button_click_3_listener() {\n            return ctx.back.emit();\n          });\n          i0.ɵɵtext(4, \" \\u2190 Back to Classrooms \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\")(7, \"h2\", 4);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\", 5);\n          i0.ɵɵtext(10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 6);\n          i0.ɵɵtext(12, \" Join Code: \");\n          i0.ɵɵelementStart(13, \"span\", 7);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"div\", 8)(16, \"nav\", 9);\n          i0.ɵɵtemplate(17, TutorDashboardComponent_button_17_Template, 2, 5, \"button\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\");\n          i0.ɵɵelementContainerStart(19, 11);\n          i0.ɵɵtemplate(20, TutorDashboardComponent_div_20_Template, 6, 1, \"div\", 12);\n          i0.ɵɵtemplate(21, TutorDashboardComponent_div_21_Template, 6, 1, \"div\", 12);\n          i0.ɵɵtemplate(22, TutorDashboardComponent_div_22_Template, 13, 5, \"div\", 12);\n          i0.ɵɵtemplate(23, TutorDashboardComponent_div_23_Template, 2, 2, \"div\", 12);\n          i0.ɵɵtemplate(24, TutorDashboardComponent_div_24_Template, 2, 2, \"div\", 12);\n          i0.ɵɵelementContainerEnd();\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedAssignment && ctx.selectedSubmission);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.classroom.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.classroom.course.title);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.classroom.code);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngSwitch\", ctx.activeTab);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"quizzes\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"assignments\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"students\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"attendance\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngSwitchCase\", \"analytics\");\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgSwitch, i1.NgSwitchCase, QuizGeneratorComponent, AssignmentCreatorComponent, AttendanceTrackerComponent, QuizAnalyticsComponent, LeaderboardComponent, AssignmentGradingModalComponent],\n      encapsulation: 2\n    });\n  }\n  return TutorDashboardComponent;\n})();","map":{"version":3,"mappings":"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","names":["EventEmitter","CommonModule","QuizGeneratorComponent","AssignmentCreatorComponent","AttendanceTrackerComponent","QuizAnalyticsComponent","LeaderboardComponent","AssignmentGradingModalComponent","i0","ctx_r7","TutorDashboardComponent","classroom","allWards","back","quizCreated","assignmentCreated","updateAttendance","approveRequest","gradeAssignment","activeTab","selectedAssignment","selectedSubmission","enrolledWards","joinRequestWards","tabs","id","name","ngOnChanges","changes","updateWardLists","wardIdSet","Set","wardIds","joinRequestIdSet","joinRequests","filter","w","has","handleGradeClick","assignment","submission","handleSaveGrade","event","emit","assignmentId","getWardName","wardId","find","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\components\\tutor-dashboard\\tutor-dashboard.component.ts","D:\\learning-portal\\frontend\\src\\app\\components\\tutor-dashboard\\tutor-dashboard.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Classroom, User, Quiz, Assignment, AssignmentSubmission, AttendanceRecord } from '../../types';\r\nimport { QuizGeneratorComponent } from '../quiz-generator/quiz-generator.component';\r\nimport { AssignmentCreatorComponent } from '../assignment-creator/assignment-creator.component';\r\nimport { AttendanceTrackerComponent } from '../attendance-tracker/attendance-tracker.component';\r\nimport { QuizAnalyticsComponent } from '../quiz-analytics/quiz-analytics.component';\r\nimport { LeaderboardComponent } from '../leaderboard/leaderboard.component';\r\nimport { AssignmentGradingModalComponent } from '../assignment-grading-modal/assignment-grading-modal.component';\r\n\r\ntype Tab = 'quizzes' | 'assignments' | 'students' | 'attendance' | 'analytics';\r\n\r\n@Component({\r\n  selector: 'app-tutor-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, QuizGeneratorComponent, AssignmentCreatorComponent, AttendanceTrackerComponent, QuizAnalyticsComponent, LeaderboardComponent, AssignmentGradingModalComponent],\r\n  templateUrl: './tutor-dashboard.component.html',\r\n})\r\nexport class TutorDashboardComponent implements OnChanges {\r\n  @Input() classroom!: Classroom;\r\n  @Input() allWards: User[] = [];\r\n  @Output() back = new EventEmitter<void>();\r\n  @Output() quizCreated = new EventEmitter<Omit<Quiz, 'id' | 'submissions'>>();\r\n  @Output() assignmentCreated = new EventEmitter<Omit<Assignment, 'id' | 'submissions'>>();\r\n  @Output() updateAttendance = new EventEmitter<AttendanceRecord>();\r\n  @Output() approveRequest = new EventEmitter<string>();\r\n  @Output() gradeAssignment = new EventEmitter<{assignmentId: string, wardId: string, grade: number, feedback: string}>();\r\n\r\n  activeTab: Tab = 'quizzes';\r\n  selectedAssignment: Assignment | null = null;\r\n  selectedSubmission: AssignmentSubmission | null = null;\r\n\r\n  enrolledWards: User[] = [];\r\n  joinRequestWards: User[] = [];\r\n\r\n  tabs: { id: Tab, name: string }[] = [\r\n    { id: 'quizzes', name: 'Quizzes' },\r\n    { id: 'assignments', name: 'Assignments' },\r\n    { id: 'students', name: 'Students' },\r\n    { id: 'attendance', name: 'Attendance' },\r\n    { id: 'analytics', name: 'Analytics' },\r\n  ];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['classroom'] || changes['allWards']) {\r\n      this.updateWardLists();\r\n    }\r\n  }\r\n\r\n  updateWardLists(): void {\r\n    const wardIdSet = new Set((this.classroom.wardIds as string[]));\r\n    const joinRequestIdSet = new Set((this.classroom.joinRequests as string[]));\r\n    this.enrolledWards = this.allWards.filter(w => wardIdSet.has(w.id));\r\n    this.joinRequestWards = this.allWards.filter(w => joinRequestIdSet.has(w.id));\r\n  }\r\n\r\n  handleGradeClick(assignment: Assignment, submission: AssignmentSubmission): void {\r\n    this.selectedAssignment = assignment;\r\n    this.selectedSubmission = submission;\r\n  }\r\n  \r\n  handleSaveGrade(event: { wardId: string, grade: number, feedback: string }): void {\r\n    if (this.selectedAssignment) {\r\n      this.gradeAssignment.emit({ assignmentId: this.selectedAssignment.id, ...event });\r\n      this.selectedAssignment = null;\r\n      this.selectedSubmission = null;\r\n    }\r\n  }\r\n\r\n  getWardName(wardId: string): string {\r\n    return this.allWards.find(w => w.id === wardId)?.name || 'Unknown';\r\n  }\r\n}\r\n","<app-assignment-grading-modal \n  *ngIf=\"selectedAssignment && selectedSubmission\"\n  [assignment]=\"selectedAssignment\"\n  [submission]=\"selectedSubmission\"\n  [wardName]=\"getWardName(selectedSubmission.wardId)\"\n  (close)=\"selectedAssignment = null; selectedSubmission = null\"\n  (saveGrade)=\"handleSaveGrade($event)\">\n</app-assignment-grading-modal>\n\n<div class=\"space-y-8\">\n  <div>\n    <button (click)=\"back.emit()\" class=\"text-sm font-medium text-sky-600 dark:text-sky-400 hover:underline mb-2\">\n      &larr; Back to Classrooms\n    </button>\n    <div class=\"md:flex justify-between items-center\">\n      <div>\n        <h2 class=\"text-3xl font-bold text-slate-800 dark:text-white\">{{ classroom.name }}</h2>\n        <p class=\"text-slate-500 dark:text-slate-400\">{{ classroom.course.title }}</p>\n      </div>\n      <div class=\"mt-2 md:mt-0 text-sm font-mono bg-slate-100 dark:bg-slate-700 p-2 rounded-md\">\n          Join Code: <span class=\"font-bold text-sky-600 dark:text-sky-400\">{{ classroom.code }}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"border-b border-slate-200 dark:border-slate-700\">\n    <nav class=\"-mb-px flex space-x-6\" aria-label=\"Tabs\">\n      <button *ngFor=\"let tab of tabs\" (click)=\"activeTab = tab.id\" class=\"whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm\"\n        [ngClass]=\"{\n          'border-sky-500 text-sky-600': activeTab === tab.id,\n          'border-transparent text-slate-500 hover:text-slate-700 hover:border-slate-300': activeTab !== tab.id\n        }\">\n          {{ tab.name }}\n      </button>\n    </nav>\n  </div>\n\n  <div>\n    <ng-container [ngSwitch]=\"activeTab\">\n      <div *ngSwitchCase=\"'quizzes'\">\n        <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div class=\"lg:col-span-1\">\n            <app-quiz-generator (quizGenerated)=\"quizCreated.emit($event)\"></app-quiz-generator>\n          </div>\n          <div class=\"lg:col-span-2 space-y-8\">\n            <app-leaderboard *ngFor=\"let quiz of classroom.quizzes\" [quiz]=\"quiz\" [wards]=\"enrolledWards\"></app-leaderboard>\n          </div>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'assignments'\">\n         <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          <div class=\"lg:col-span-1\">\n            <app-assignment-creator (assignmentCreated)=\"assignmentCreated.emit($event)\"></app-assignment-creator>\n          </div>\n          <div class=\"lg:col-span-2 space-y-6\">\n            <div *ngFor=\"let assignment of classroom.assignments\" class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                <h4 class=\"text-lg font-bold text-slate-800 dark:text-white\">{{ assignment.title }}</h4>\n                <p class=\"text-sm text-slate-500 dark:text-slate-400 mt-1\">{{ assignment.submissions.length }} / {{ enrolledWards.length }} submitted</p>\n                <div class=\"mt-4\">\n                    <h5 class=\"text-sm font-semibold mb-2\">Submissions:</h5>\n                    <ul *ngIf=\"assignment.submissions.length > 0; else noSubmissions\" class=\"space-y-2\">\n                        <li *ngFor=\"let sub of assignment.submissions\" class=\"flex justify-between items-center p-2 bg-slate-50 dark:bg-slate-700/50 rounded-md\">\n                            <span>{{ getWardName(sub.wardId) }}</span>\n                            <button (click)=\"handleGradeClick(assignment, sub)\" class=\"text-sm font-medium text-sky-600 hover:underline\">\n                              {{ sub.grade !== null ? 'View / Edit Grade (' + sub.grade + '%)' : 'Grade Now' }}\n                            </button>\n                        </li>\n                    </ul>\n                    <ng-template #noSubmissions><p class=\"text-sm text-slate-400\">No submissions yet.</p></ng-template>\n                </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div *ngSwitchCase=\"'students'\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                  <h3 class=\"text-xl font-bold text-slate-800 dark:text-white mb-4\">Enrolled Students ({{ enrolledWards.length }})</h3>\n                  <ul class=\"space-y-2\">\n                      <li *ngFor=\"let ward of enrolledWards\" class=\"p-3 bg-slate-50 dark:bg-slate-700/50 rounded-md font-medium\">{{ ward.name }}</li>\n                  </ul>\n              </div>\n               <div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6\">\n                  <h3 class=\"text-xl font-bold text-slate-800 dark:text-white mb-4\">Join Requests ({{ joinRequestWards.length }})</h3>\n                   <ul *ngIf=\"joinRequestWards.length > 0; else noRequests\" class=\"space-y-2\">\n                      <li *ngFor=\"let ward of joinRequestWards\" class=\"flex justify-between items-center p-3 bg-slate-50 dark:bg-slate-700/50 rounded-md\">\n                          <span class=\"font-medium\">{{ ward.name }}</span>\n                          <button (click)=\"approveRequest.emit(ward.id)\" class=\"px-3 py-1 text-xs font-semibold rounded-md text-white bg-green-600 hover:bg-green-700\">Approve</button>\n                      </li>\n                   </ul>\n                   <ng-template #noRequests><p class=\"text-slate-500 dark:text-slate-400\">No pending join requests.</p></ng-template>\n              </div>\n          </div>\n      </div>\n\n      <div *ngSwitchCase=\"'attendance'\">\n        <app-attendance-tracker [wards]=\"enrolledWards\" [attendanceRecords]=\"classroom.attendance\" (updateAttendance)=\"updateAttendance.emit($event)\"></app-attendance-tracker>\n      </div>\n\n      <div *ngSwitchCase=\"'analytics'\">\n        <app-quiz-analytics [classroom]=\"classroom\" [allWards]=\"allWards\"></app-quiz-analytics>\n      </div>\n    </ng-container>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}