{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction QuizAnalyticsComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const quiz_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", quiz_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(quiz_r4.title);\n  }\n}\nfunction QuizAnalyticsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" Select a quiz to view analytics or create one first. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuizAnalyticsComponent_ng_template_9_div_0_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 18)(1, \"span\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r7.question);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", item_r7.incorrectCount, \" incorrect\");\n  }\n}\nfunction QuizAnalyticsComponent_ng_template_9_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"div\", 11)(2, \"p\", 12);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 13);\n    i0.ɵɵtext(5, \"Average Score\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"p\", 12);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 13);\n    i0.ɵɵtext(10, \"Participation Rate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 14)(12, \"h4\", 15);\n    i0.ɵɵtext(13, \"Most Difficult Questions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"ul\", 16);\n    i0.ɵɵtemplate(15, QuizAnalyticsComponent_ng_template_9_div_0_li_15_Template, 5, 2, \"li\", 17);\n    i0.ɵɵpipe(16, \"slice\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.analytics.averageScore.toFixed(1), \"%\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r5.analytics.participationRate.toFixed(0), \"%\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(16, 3, ctx_r5.analytics.questionDifficulty, 0, 3));\n  }\n}\nfunction QuizAnalyticsComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, QuizAnalyticsComponent_ng_template_9_div_0_Template, 17, 7, \"div\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.analytics);\n  }\n}\nexport let QuizAnalyticsComponent = /*#__PURE__*/(() => {\n  class QuizAnalyticsComponent {\n    classroom;\n    allWards = [];\n    selectedQuizId = null;\n    analytics = null;\n    enrolledWards = [];\n    selectedQuiz;\n    ngOnChanges(changes) {\n      if (changes['classroom'] || changes['allWards']) {\n        this.enrolledWards = this.allWards.filter(w => this.classroom.wardIds.includes(w.id));\n        if (!this.selectedQuizId && this.classroom.quizzes.length > 0) {\n          this.selectedQuizId = this.classroom.quizzes[0].id;\n        }\n        this.calculateAnalytics();\n      }\n    }\n    onQuizSelectionChange() {\n      this.calculateAnalytics();\n    }\n    calculateAnalytics() {\n      this.selectedQuiz = this.classroom.quizzes.find(q => q.id === this.selectedQuizId);\n      if (!this.selectedQuiz || this.enrolledWards.length === 0) {\n        this.analytics = null;\n        return;\n      }\n      const participationCount = new Set(this.selectedQuiz.submissions.map(s => s.wardId)).size;\n      const participationRate = participationCount / this.enrolledWards.length * 100;\n      const averageScore = this.selectedQuiz.submissions.length > 0 ? this.selectedQuiz.submissions.reduce((acc, sub) => acc + sub.score, 0) / this.selectedQuiz.submissions.length : 0;\n      const questionDifficulty = this.selectedQuiz.questions.map((q, index) => {\n        const incorrectCount = this.selectedQuiz.submissions.filter(s => s.answers[index] !== q.correctAnswer).length;\n        return {\n          question: q.question,\n          incorrectCount\n        };\n      }).sort((a, b) => b.incorrectCount - a.incorrectCount);\n      this.analytics = {\n        participationRate,\n        averageScore,\n        questionDifficulty\n      };\n    }\n    static ɵfac = function QuizAnalyticsComponent_Factory(t) {\n      return new (t || QuizAnalyticsComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: QuizAnalyticsComponent,\n      selectors: [[\"app-quiz-analytics\"]],\n      inputs: {\n        classroom: \"classroom\",\n        allWards: \"allWards\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 11,\n      vars: 4,\n      consts: [[1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\", \"max-w-4xl\", \"mx-auto\"], [1, \"text-xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\", \"mb-4\"], [\"for\", \"quiz-select\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-slate-700\", \"dark:text-slate-300\"], [\"id\", \"quiz-select\", 1, \"mt-1\", \"block\", \"w-full\", \"pl-3\", \"pr-10\", \"py-2\", \"text-base\", \"border-gray-300\", \"focus:outline-none\", \"focus:ring-sky-500\", \"focus:border-sky-500\", \"sm:text-sm\", \"rounded-md\", \"bg-white\", \"dark:bg-slate-700\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-slate-500 dark:text-slate-400 text-center py-12\", 4, \"ngIf\", \"ngIfElse\"], [\"analyticsContent\", \"\"], [3, \"value\"], [1, \"text-slate-500\", \"dark:text-slate-400\", \"text-center\", \"py-12\"], [\"class\", \"mt-6 grid grid-cols-1 md:grid-cols-3 gap-6\", 4, \"ngIf\"], [1, \"mt-6\", \"grid\", \"grid-cols-1\", \"md:grid-cols-3\", \"gap-6\"], [1, \"bg-slate-50\", \"dark:bg-slate-700/50\", \"p-4\", \"rounded-lg\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"text-sky-600\", \"dark:text-sky-400\"], [1, \"text-sm\", \"font-medium\", \"text-slate-500\", \"dark:text-slate-400\", \"mt-1\"], [1, \"col-span-1\", \"md:col-span-3\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"p-4\", \"rounded-lg\"], [1, \"font-semibold\", \"text-slate-700\", \"dark:text-slate-200\", \"mb-3\"], [1, \"space-y-2\"], [\"class\", \"flex items-start justify-between text-sm\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-start\", \"justify-between\", \"text-sm\"], [1, \"text-slate-600\", \"dark:text-slate-300\", \"pr-4\"], [1, \"font-bold\", \"text-red-500\", \"whitespace-nowrap\"]],\n      template: function QuizAnalyticsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2, \"Quiz Analytics\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\")(4, \"label\", 2);\n          i0.ɵɵtext(5, \"Select a Quiz\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"select\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function QuizAnalyticsComponent_Template_select_ngModelChange_6_listener($event) {\n            return ctx.selectedQuizId = $event;\n          })(\"ngModelChange\", function QuizAnalyticsComponent_Template_select_ngModelChange_6_listener() {\n            return ctx.onQuizSelectionChange();\n          });\n          i0.ɵɵtemplate(7, QuizAnalyticsComponent_option_7_Template, 2, 2, \"option\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, QuizAnalyticsComponent_div_8_Template, 2, 0, \"div\", 5);\n          i0.ɵɵtemplate(9, QuizAnalyticsComponent_ng_template_9_Template, 1, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r2 = i0.ɵɵreference(10);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedQuizId);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.classroom.quizzes);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedQuiz)(\"ngIfElse\", _r2);\n        }\n      },\n      dependencies: [CommonModule, i1.NgForOf, i1.NgIf, i1.SlicePipe, FormsModule, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n  return QuizAnalyticsComponent;\n})();","map":{"version":3,"mappings":"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","names":["CommonModule","FormsModule","i0","QuizAnalyticsComponent","classroom","allWards","selectedQuizId","analytics","enrolledWards","selectedQuiz","ngOnChanges","changes","filter","w","wardIds","includes","id","quizzes","length","calculateAnalytics","onQuizSelectionChange","find","q","participationCount","Set","submissions","map","s","wardId","size","participationRate","averageScore","reduce","acc","sub","score","questionDifficulty","questions","index","incorrectCount","answers","correctAnswer","question","sort","a","b","selectors","inputs","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\components\\quiz-analytics\\quiz-analytics.component.ts","D:\\learning-portal\\frontend\\src\\app\\components\\quiz-analytics\\quiz-analytics.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Classroom, User, Quiz } from '../../types';\r\n\r\ninterface AnalyticsData {\r\n  participationRate: number;\r\n  averageScore: number;\r\n  questionDifficulty: { question: string, incorrectCount: number }[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-quiz-analytics',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './quiz-analytics.component.html',\r\n})\r\nexport class QuizAnalyticsComponent implements OnChanges {\r\n  @Input() classroom!: Classroom;\r\n  @Input() allWards: User[] = [];\r\n\r\n  selectedQuizId: string | null = null;\r\n  analytics: AnalyticsData | null = null;\r\n  enrolledWards: User[] = [];\r\n  selectedQuiz: Quiz | undefined;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['classroom'] || changes['allWards']) {\r\n      this.enrolledWards = this.allWards.filter(w => (this.classroom.wardIds as string[]).includes(w.id));\r\n      if (!this.selectedQuizId && this.classroom.quizzes.length > 0) {\r\n        this.selectedQuizId = this.classroom.quizzes[0].id;\r\n      }\r\n      this.calculateAnalytics();\r\n    }\r\n  }\r\n  \r\n  onQuizSelectionChange(): void {\r\n      this.calculateAnalytics();\r\n  }\r\n\r\n  calculateAnalytics(): void {\r\n    this.selectedQuiz = this.classroom.quizzes.find(q => q.id === this.selectedQuizId);\r\n    if (!this.selectedQuiz || this.enrolledWards.length === 0) {\r\n      this.analytics = null;\r\n      return;\r\n    }\r\n\r\n    const participationCount = new Set(this.selectedQuiz.submissions.map(s => s.wardId)).size;\r\n    const participationRate = (participationCount / this.enrolledWards.length) * 100;\r\n    const averageScore = this.selectedQuiz.submissions.length > 0\r\n      ? this.selectedQuiz.submissions.reduce((acc, sub) => acc + sub.score, 0) / this.selectedQuiz.submissions.length\r\n      : 0;\r\n\r\n    const questionDifficulty = this.selectedQuiz.questions.map((q, index) => {\r\n      const incorrectCount = this.selectedQuiz!.submissions.filter(s => s.answers[index] !== q.correctAnswer).length;\r\n      return { question: q.question, incorrectCount };\r\n    }).sort((a, b) => b.incorrectCount - a.incorrectCount);\r\n\r\n    this.analytics = { participationRate, averageScore, questionDifficulty };\r\n  }\r\n}\r\n","<div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 max-w-4xl mx-auto\">\n    <h3 class=\"text-xl font-bold text-slate-800 dark:text-white mb-4\">Quiz Analytics</h3>\n    \n    <div>\n      <label for=\"quiz-select\" class=\"block text-sm font-medium text-slate-700 dark:text-slate-300\">Select a Quiz</label>\n      <select\n        id=\"quiz-select\"\n        [(ngModel)]=\"selectedQuizId\"\n        (ngModelChange)=\"onQuizSelectionChange()\"\n        class=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-sky-500 focus:border-sky-500 sm:text-sm rounded-md bg-white dark:bg-slate-700\"\n      >\n        <option *ngFor=\"let quiz of classroom.quizzes\" [value]=\"quiz.id\">{{ quiz.title }}</option>\n      </select>\n    </div>\n  \n    <div *ngIf=\"!selectedQuiz; else analyticsContent\" class=\"text-slate-500 dark:text-slate-400 text-center py-12\">\n      Select a quiz to view analytics or create one first.\n    </div>\n  \n    <ng-template #analyticsContent>\n      <div *ngIf=\"analytics\" class=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div class=\"bg-slate-50 dark:bg-slate-700/50 p-4 rounded-lg text-center\">\n              <p class=\"text-3xl font-bold text-sky-600 dark:text-sky-400\">{{ analytics.averageScore.toFixed(1) }}%</p>\n              <p class=\"text-sm font-medium text-slate-500 dark:text-slate-400 mt-1\">Average Score</p>\n          </div>\n           <div class=\"bg-slate-50 dark:bg-slate-700/50 p-4 rounded-lg text-center\">\n              <p class=\"text-3xl font-bold text-sky-600 dark:text-sky-400\">{{ analytics.participationRate.toFixed(0) }}%</p>\n              <p class=\"text-sm font-medium text-slate-500 dark:text-slate-400 mt-1\">Participation Rate</p>\n          </div>\n          <div class=\"col-span-1 md:col-span-3 bg-slate-50 dark:bg-slate-700/50 p-4 rounded-lg\">\n              <h4 class=\"font-semibold text-slate-700 dark:text-slate-200 mb-3\">Most Difficult Questions</h4>\n              <ul class=\"space-y-2\">\n                  <li *ngFor=\"let item of analytics.questionDifficulty | slice:0:3\" class=\"flex items-start justify-between text-sm\">\n                      <span class=\"text-slate-600 dark:text-slate-300 pr-4\">{{ item.question }}</span>\n                      <span class=\"font-bold text-red-500 whitespace-nowrap\">{{ item.incorrectCount }} incorrect</span>\n                  </li>\n              </ul>\n          </div>\n      </div>\n    </ng-template>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}