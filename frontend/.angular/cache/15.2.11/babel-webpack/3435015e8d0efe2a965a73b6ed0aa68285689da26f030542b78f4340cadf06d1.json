{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-green-500 text-white\": a0,\n    \"bg-red-500 text-white\": a1,\n    \"bg-yellow-500 text-white\": a2,\n    \"text-slate-600 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-500\": a3\n  };\n};\nfunction AttendanceTrackerComponent_div_22_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AttendanceTrackerComponent_div_22_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const status_r3 = restoredCtx.$implicit;\n      const ward_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.handleStatusChange(ward_r1.id, status_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    const ward_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(2, _c0, ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"present\", ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"absent\", ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"late\", ctx_r2.currentStatuses[ward_r1.id] !== status_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r3, \" \");\n  }\n}\nfunction AttendanceTrackerComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtemplate(4, AttendanceTrackerComponent_div_22_button_4_Template, 2, 7, \"button\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ward_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ward_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.statusOptions);\n  }\n}\nexport let AttendanceTrackerComponent = /*#__PURE__*/(() => {\n  class AttendanceTrackerComponent {\n    wards = [];\n    attendanceRecords = [];\n    updateAttendance = new EventEmitter();\n    selectedDate = '';\n    currentStatuses = {};\n    statusOptions = ['present', 'absent', 'late'];\n    ngOnInit() {\n      this.selectedDate = this.getTodayString();\n      this.updateCurrentStatuses();\n    }\n    ngOnChanges(changes) {\n      if (changes['wards'] || changes['attendanceRecords'] || changes['selectedDate']) {\n        this.updateCurrentStatuses();\n      }\n    }\n    getTodayString() {\n      return new Date().toISOString().split('T')[0];\n    }\n    updateCurrentStatuses() {\n      const recordForDate = this.attendanceRecords.find(r => r.date === this.selectedDate);\n      const initialStatuses = {};\n      this.wards.forEach(ward => {\n        const existingStatus = recordForDate?.statuses.find(s => s.wardId === ward.id)?.status;\n        initialStatuses[ward.id] = existingStatus || 'present';\n      });\n      this.currentStatuses = initialStatuses;\n    }\n    onDateChange() {\n      this.updateCurrentStatuses();\n    }\n    handleStatusChange(wardId, status) {\n      const updatedStatuses = {\n        ...this.currentStatuses,\n        [wardId]: status\n      };\n      this.currentStatuses = updatedStatuses;\n      const newRecord = {\n        date: this.selectedDate,\n        statuses: Object.entries(updatedStatuses).map(([wId, s]) => ({\n          wardId: wId,\n          status: s\n        }))\n      };\n      this.updateAttendance.emit(newRecord);\n    }\n    get statusCounts() {\n      return Object.values(this.currentStatuses).reduce((acc, status) => {\n        acc[status] = (acc[status] || 0) + 1;\n        return acc;\n      }, {});\n    }\n    static ɵfac = function AttendanceTrackerComponent_Factory(t) {\n      return new (t || AttendanceTrackerComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AttendanceTrackerComponent,\n      selectors: [[\"app-attendance-tracker\"]],\n      inputs: {\n        wards: \"wards\",\n        attendanceRecords: \"attendanceRecords\"\n      },\n      outputs: {\n        updateAttendance: \"updateAttendance\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 23,\n      vars: 6,\n      consts: [[1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\", \"max-w-3xl\", \"mx-auto\"], [1, \"md:flex\", \"justify-between\", \"items-center\", \"mb-6\"], [1, \"text-xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\", \"mb-2\", \"md:mb-0\"], [\"type\", \"date\", 1, \"px-3\", \"py-2\", \"bg-white\", \"dark:bg-slate-700\", \"border\", \"border-slate-300\", \"dark:border-slate-600\", \"rounded-md\", \"shadow-sm\", 3, \"ngModel\", \"max\", \"ngModelChange\", \"change\"], [1, \"flex\", \"justify-center\", \"space-x-6\", \"mb-6\", \"pb-4\", \"border-b\", \"border-slate-200\", \"dark:border-slate-700\"], [1, \"text-center\"], [1, \"text-2xl\", \"font-bold\", \"text-green-500\"], [1, \"text-xs\", \"text-slate-500\"], [1, \"text-2xl\", \"font-bold\", \"text-red-500\"], [1, \"text-2xl\", \"font-bold\", \"text-yellow-500\"], [1, \"space-y-3\", \"max-h-96\", \"overflow-y-auto\", \"pr-2\"], [\"class\", \"flex items-center justify-between p-3 bg-slate-50 dark:bg-slate-700/50 rounded-lg\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-between\", \"p-3\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-lg\"], [1, \"font-medium\", \"text-slate-700\", \"dark:text-slate-200\"], [1, \"flex\", \"space-x-1\", \"bg-slate-200\", \"dark:bg-slate-600\", \"p-1\", \"rounded-lg\"], [\"class\", \"px-3 py-1 text-xs font-semibold rounded-md transition-colors capitalize\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-3\", \"py-1\", \"text-xs\", \"font-semibold\", \"rounded-md\", \"transition-colors\", \"capitalize\", 3, \"ngClass\", \"click\"]],\n      template: function AttendanceTrackerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Track Attendance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AttendanceTrackerComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.selectedDate = $event;\n          })(\"change\", function AttendanceTrackerComponent_Template_input_change_4_listener() {\n            return ctx.onDateChange();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵtext(10, \"Present\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 8);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 7);\n          i0.ɵɵtext(15, \"Absent\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 9);\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7);\n          i0.ɵɵtext(20, \"Late\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 10);\n          i0.ɵɵtemplate(22, AttendanceTrackerComponent_div_22_Template, 5, 2, \"div\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedDate)(\"max\", ctx.getTodayString());\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"present\"] || 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"absent\"] || 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"late\"] || 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.wards);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n  return AttendanceTrackerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}