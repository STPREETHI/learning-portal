{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    \"bg-green-500 text-white\": a0,\n    \"bg-red-500 text-white\": a1,\n    \"bg-yellow-500 text-white\": a2,\n    \"text-slate-600 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-500\": a3\n  };\n};\nfunction AttendanceTrackerComponent_div_22_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AttendanceTrackerComponent_div_22_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const status_r3 = restoredCtx.$implicit;\n      const ward_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.handleStatusChange(ward_r1.id, status_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    const ward_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(2, _c0, ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"present\", ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"absent\", ctx_r2.currentStatuses[ward_r1.id] === status_r3 && status_r3 === \"late\", ctx_r2.currentStatuses[ward_r1.id] !== status_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r3, \" \");\n  }\n}\nfunction AttendanceTrackerComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 14);\n    i0.ɵɵtemplate(4, AttendanceTrackerComponent_div_22_button_4_Template, 2, 7, \"button\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ward_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ward_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.statusOptions);\n  }\n}\nexport let AttendanceTrackerComponent = /*#__PURE__*/(() => {\n  class AttendanceTrackerComponent {\n    wards = [];\n    attendanceRecords = [];\n    updateAttendance = new EventEmitter();\n    selectedDate = '';\n    currentStatuses = {};\n    statusOptions = ['present', 'absent', 'late'];\n    ngOnInit() {\n      this.selectedDate = this.getTodayString();\n      this.updateCurrentStatuses();\n    }\n    ngOnChanges(changes) {\n      if (changes['wards'] || changes['attendanceRecords'] || changes['selectedDate']) {\n        this.updateCurrentStatuses();\n      }\n    }\n    getTodayString() {\n      return new Date().toISOString().split('T')[0];\n    }\n    updateCurrentStatuses() {\n      const recordForDate = this.attendanceRecords.find(r => r.date === this.selectedDate);\n      const initialStatuses = {};\n      this.wards.forEach(ward => {\n        const existingStatus = recordForDate?.statuses.find(s => s.wardId === ward.id)?.status;\n        initialStatuses[ward.id] = existingStatus || 'present';\n      });\n      this.currentStatuses = initialStatuses;\n    }\n    onDateChange() {\n      this.updateCurrentStatuses();\n    }\n    handleStatusChange(wardId, status) {\n      const updatedStatuses = {\n        ...this.currentStatuses,\n        [wardId]: status\n      };\n      this.currentStatuses = updatedStatuses;\n      const newRecord = {\n        date: this.selectedDate,\n        statuses: Object.entries(updatedStatuses).map(([wId, s]) => ({\n          wardId: wId,\n          status: s\n        }))\n      };\n      this.updateAttendance.emit(newRecord);\n    }\n    get statusCounts() {\n      return Object.values(this.currentStatuses).reduce((acc, status) => {\n        acc[status] = (acc[status] || 0) + 1;\n        return acc;\n      }, {});\n    }\n    static ɵfac = function AttendanceTrackerComponent_Factory(t) {\n      return new (t || AttendanceTrackerComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AttendanceTrackerComponent,\n      selectors: [[\"app-attendance-tracker\"]],\n      inputs: {\n        wards: \"wards\",\n        attendanceRecords: \"attendanceRecords\"\n      },\n      outputs: {\n        updateAttendance: \"updateAttendance\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 23,\n      vars: 6,\n      consts: [[1, \"bg-white\", \"dark:bg-slate-800\", \"rounded-lg\", \"shadow-lg\", \"p-6\", \"max-w-3xl\", \"mx-auto\"], [1, \"md:flex\", \"justify-between\", \"items-center\", \"mb-6\"], [1, \"text-xl\", \"font-bold\", \"text-slate-800\", \"dark:text-white\", \"mb-2\", \"md:mb-0\"], [\"type\", \"date\", 1, \"px-3\", \"py-2\", \"bg-white\", \"dark:bg-slate-700\", \"border\", \"border-slate-300\", \"dark:border-slate-600\", \"rounded-md\", \"shadow-sm\", 3, \"ngModel\", \"max\", \"ngModelChange\", \"change\"], [1, \"flex\", \"justify-center\", \"space-x-6\", \"mb-6\", \"pb-4\", \"border-b\", \"border-slate-200\", \"dark:border-slate-700\"], [1, \"text-center\"], [1, \"text-2xl\", \"font-bold\", \"text-green-500\"], [1, \"text-xs\", \"text-slate-500\"], [1, \"text-2xl\", \"font-bold\", \"text-red-500\"], [1, \"text-2xl\", \"font-bold\", \"text-yellow-500\"], [1, \"space-y-3\", \"max-h-96\", \"overflow-y-auto\", \"pr-2\"], [\"class\", \"flex items-center justify-between p-3 bg-slate-50 dark:bg-slate-700/50 rounded-lg\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"items-center\", \"justify-between\", \"p-3\", \"bg-slate-50\", \"dark:bg-slate-700/50\", \"rounded-lg\"], [1, \"font-medium\", \"text-slate-700\", \"dark:text-slate-200\"], [1, \"flex\", \"space-x-1\", \"bg-slate-200\", \"dark:bg-slate-600\", \"p-1\", \"rounded-lg\"], [\"class\", \"px-3 py-1 text-xs font-semibold rounded-md transition-colors capitalize\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-3\", \"py-1\", \"text-xs\", \"font-semibold\", \"rounded-md\", \"transition-colors\", \"capitalize\", 3, \"ngClass\", \"click\"]],\n      template: function AttendanceTrackerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Track Attendance\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function AttendanceTrackerComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.selectedDate = $event;\n          })(\"change\", function AttendanceTrackerComponent_Template_input_change_4_listener() {\n            return ctx.onDateChange();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6);\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 7);\n          i0.ɵɵtext(10, \"Present\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"div\", 8);\n          i0.ɵɵtext(13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 7);\n          i0.ɵɵtext(15, \"Absent\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"div\", 5)(17, \"div\", 9);\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 7);\n          i0.ɵɵtext(20, \"Late\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 10);\n          i0.ɵɵtemplate(22, AttendanceTrackerComponent_div_22_Template, 5, 2, \"div\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.selectedDate)(\"max\", ctx.getTodayString());\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"present\"] || 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"absent\"] || 0);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.statusCounts[\"late\"] || 0);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.wards);\n        }\n      },\n      dependencies: [CommonModule, i1.NgClass, i1.NgForOf, FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n      encapsulation: 2\n    });\n  }\n  return AttendanceTrackerComponent;\n})();","map":{"version":3,"mappings":"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","names":["EventEmitter","CommonModule","FormsModule","i0","AttendanceTrackerComponent","wards","attendanceRecords","updateAttendance","selectedDate","currentStatuses","statusOptions","ngOnInit","getTodayString","updateCurrentStatuses","ngOnChanges","changes","Date","toISOString","split","recordForDate","find","r","date","initialStatuses","forEach","ward","existingStatus","statuses","s","wardId","id","status","onDateChange","handleStatusChange","updatedStatuses","newRecord","Object","entries","map","wId","emit","statusCounts","values","reduce","acc","selectors","inputs","outputs","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\components\\attendance-tracker\\attendance-tracker.component.ts","D:\\learning-portal\\frontend\\src\\app\\components\\attendance-tracker\\attendance-tracker.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { User, AttendanceRecord, AttendanceStatus } from '../../types';\r\n\r\n@Component({\r\n  selector: 'app-attendance-tracker',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  templateUrl: './attendance-tracker.component.html',\r\n})\r\nexport class AttendanceTrackerComponent implements OnInit, OnChanges {\r\n  @Input() wards: User[] = [];\r\n  @Input() attendanceRecords: AttendanceRecord[] = [];\r\n  @Output() updateAttendance = new EventEmitter<AttendanceRecord>();\r\n\r\n  selectedDate: string = '';\r\n  currentStatuses: { [wardId: string]: AttendanceStatus } = {};\r\n  statusOptions: AttendanceStatus[] = ['present', 'absent', 'late'];\r\n\r\n  ngOnInit(): void {\r\n    this.selectedDate = this.getTodayString();\r\n    this.updateCurrentStatuses();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['wards'] || changes['attendanceRecords'] || changes['selectedDate']) {\r\n      this.updateCurrentStatuses();\r\n    }\r\n  }\r\n\r\n  getTodayString(): string {\r\n    return new Date().toISOString().split('T')[0];\r\n  }\r\n\r\n  updateCurrentStatuses(): void {\r\n    const recordForDate = this.attendanceRecords.find(r => r.date === this.selectedDate);\r\n    const initialStatuses: { [wardId: string]: AttendanceStatus } = {};\r\n    this.wards.forEach(ward => {\r\n      const existingStatus = recordForDate?.statuses.find(s => s.wardId === ward.id)?.status;\r\n      initialStatuses[ward.id] = existingStatus || 'present';\r\n    });\r\n    this.currentStatuses = initialStatuses;\r\n  }\r\n  \r\n  onDateChange(): void {\r\n    this.updateCurrentStatuses();\r\n  }\r\n\r\n  handleStatusChange(wardId: string, status: AttendanceStatus): void {\r\n    const updatedStatuses = { ...this.currentStatuses, [wardId]: status };\r\n    this.currentStatuses = updatedStatuses;\r\n    \r\n    const newRecord: AttendanceRecord = {\r\n      date: this.selectedDate,\r\n      statuses: Object.entries(updatedStatuses).map(([wId, s]) => ({ wardId: wId, status: s })),\r\n    };\r\n    this.updateAttendance.emit(newRecord);\r\n  }\r\n\r\n  get statusCounts(): Record<AttendanceStatus, number> {\r\n    return Object.values(this.currentStatuses).reduce((acc, status) => {\r\n      acc[status] = (acc[status] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<AttendanceStatus, number>);\r\n  }\r\n}\r\n","<div class=\"bg-white dark:bg-slate-800 rounded-lg shadow-lg p-6 max-w-3xl mx-auto\">\n    <div class=\"md:flex justify-between items-center mb-6\">\n      <h3 class=\"text-xl font-bold text-slate-800 dark:text-white mb-2 md:mb-0\">Track Attendance</h3>\n      <input\n        type=\"date\"\n        [(ngModel)]=\"selectedDate\"\n        (change)=\"onDateChange()\"\n        [max]=\"getTodayString()\"\n        class=\"px-3 py-2 bg-white dark:bg-slate-700 border border-slate-300 dark:border-slate-600 rounded-md shadow-sm\"\n      />\n    </div>\n    \n    <div class=\"flex justify-center space-x-6 mb-6 pb-4 border-b border-slate-200 dark:border-slate-700\">\n      <div class=\"text-center\"><div class=\"text-2xl font-bold text-green-500\">{{ statusCounts['present'] || 0 }}</div><div class=\"text-xs text-slate-500\">Present</div></div>\n      <div class=\"text-center\"><div class=\"text-2xl font-bold text-red-500\">{{ statusCounts['absent'] || 0 }}</div><div class=\"text-xs text-slate-500\">Absent</div></div>\n      <div class=\"text-center\"><div class=\"text-2xl font-bold text-yellow-500\">{{ statusCounts['late'] || 0 }}</div><div class=\"text-xs text-slate-500\">Late</div></div>\n    </div>\n  \n    <div class=\"space-y-3 max-h-96 overflow-y-auto pr-2\">\n      <div *ngFor=\"let ward of wards\" class=\"flex items-center justify-between p-3 bg-slate-50 dark:bg-slate-700/50 rounded-lg\">\n        <span class=\"font-medium text-slate-700 dark:text-slate-200\">{{ ward.name }}</span>\n        <div class=\"flex space-x-1 bg-slate-200 dark:bg-slate-600 p-1 rounded-lg\">\n          <button *ngFor=\"let status of statusOptions\"\n            (click)=\"handleStatusChange(ward.id, status)\"\n            class=\"px-3 py-1 text-xs font-semibold rounded-md transition-colors capitalize\"\n            [ngClass]=\"{\n              'bg-green-500 text-white': currentStatuses[ward.id] === status && status === 'present',\n              'bg-red-500 text-white': currentStatuses[ward.id] === status && status === 'absent',\n              'bg-yellow-500 text-white': currentStatuses[ward.id] === status && status === 'late',\n              'text-slate-600 dark:text-slate-300 hover:bg-slate-300 dark:hover:bg-slate-500': currentStatuses[ward.id] !== status\n            }\">\n            {{ status }}\n          </button>\n        </div>\n      </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}