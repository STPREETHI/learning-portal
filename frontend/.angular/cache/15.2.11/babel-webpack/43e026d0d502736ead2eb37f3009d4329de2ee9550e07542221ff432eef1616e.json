{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { UserRole } from './types';\n// Components\nimport { HeaderComponent } from './components/header/header.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { SpinnerIconComponent } from './components/icons/spinner-icon.component';\nimport { ClassroomListComponent } from './components/classroom-list/classroom-list.component';\nimport { TutorDashboardComponent } from './components/tutor-dashboard/tutor-dashboard.component';\nimport { WardDashboardComponent } from './components/ward-dashboard/ward-dashboard.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/api.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"app-spinner-icon\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", \"w-10 h-10\");\n  }\n}\nfunction AppComponent_ng_container_4_app_login_page_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-login-page\", 8);\n    i0.ɵɵlistener(\"login\", function AppComponent_ng_container_4_app_login_page_1_Template_app_login_page_login_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.handleLogin($event));\n    })(\"register\", function AppComponent_ng_container_4_app_login_page_1_Template_app_login_page_register_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.handleRegister($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"app-spinner-icon\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"className\", \"w-10 h-10\");\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_ng_container_2_app_classroom_list_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-classroom-list\", 14);\n    i0.ɵɵlistener(\"selectClassroom\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_classroom_list_1_Template_app_classroom_list_selectClassroom_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r12.setSelectedClassroomId($event));\n    })(\"createClassroom\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_classroom_list_1_Template_app_classroom_list_createClassroom_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r14.handleCreateClassroom($event));\n    })(\"joinClassroom\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_classroom_list_1_Template_app_classroom_list_joinClassroom_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r15 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r15.handleJoinClassroom($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"classrooms\", ctx_r9.classrooms)(\"currentUser\", ctx_r9.currentUser);\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-tutor-dashboard\", 15);\n    i0.ɵɵlistener(\"back\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_back_0_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r16.setSelectedClassroomId(null));\n    })(\"quizCreated\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_quizCreated_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r18.handleQuizCreated($event));\n    })(\"assignmentCreated\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_assignmentCreated_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r19 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r19.handleAssignmentCreated($event));\n    })(\"updateAttendance\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_updateAttendance_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r20 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r20.handleUpdateAttendance($event));\n    })(\"approveRequest\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_approveRequest_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r21 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r21.handleApproveRequest($event));\n    })(\"gradeAssignment\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template_app_tutor_dashboard_gradeAssignment_0_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r22 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r22.handleGradeAssignment($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"classroom\", ctx_r10.selectedClassroom)(\"allWards\", ctx_r10.allWards);\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_ng_container_2_app_ward_dashboard_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-ward-dashboard\", 16);\n    i0.ɵɵlistener(\"quizCompleted\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_ward_dashboard_3_Template_app_ward_dashboard_quizCompleted_0_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r23.handleQuizCompleted($event));\n    })(\"assignmentSubmitted\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_ward_dashboard_3_Template_app_ward_dashboard_assignmentSubmitted_0_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r25.handleAssignmentSubmitted($event));\n    })(\"back\", function AppComponent_ng_container_4_ng_container_2_ng_container_2_app_ward_dashboard_3_Template_app_ward_dashboard_back_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r26.setSelectedClassroomId(null));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"classroom\", ctx_r11.selectedClassroom)(\"currentUser\", ctx_r11.currentUser);\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_4_ng_container_2_ng_container_2_app_classroom_list_1_Template, 1, 2, \"app-classroom-list\", 11);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_4_ng_container_2_ng_container_2_app_tutor_dashboard_2_Template, 1, 2, \"app-tutor-dashboard\", 12);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_4_ng_container_2_ng_container_2_app_ward_dashboard_3_Template, 1, 2, \"app-ward-dashboard\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.selectedClassroom);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.selectedClassroom && ctx_r8.currentUser.role === ctx_r8.userRoleEnum.Tutor);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.selectedClassroom && ctx_r8.currentUser.role === ctx_r8.userRoleEnum.Ward);\n  }\n}\nfunction AppComponent_ng_container_4_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_4_ng_container_2_div_1_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_4_ng_container_2_ng_container_2_Template, 4, 3, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.isLoading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.isLoading);\n  }\n}\nfunction AppComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_4_app_login_page_1_Template, 1, 0, \"app-login-page\", 7);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_4_ng_container_2_Template, 3, 2, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.currentUser);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.currentUser);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    apiService;\n    currentUser = null;\n    classrooms = [];\n    allWards = [];\n    selectedClassroomId = null;\n    isLoading = false;\n    isAuthLoading = true;\n    userRoleEnum = UserRole;\n    constructor(apiService) {\n      this.apiService = apiService;\n    }\n    ngOnInit() {\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      if (token && user) {\n        try {\n          this.currentUser = JSON.parse(user);\n        } catch (e) {\n          this.handleLogout();\n        }\n      }\n      this.isAuthLoading = false;\n      if (this.currentUser) {\n        this.fetchData();\n      }\n    }\n    get selectedClassroom() {\n      return this.classrooms.find(c => c.id === this.selectedClassroomId);\n    }\n    fetchData() {\n      this.isLoading = true;\n      this.apiService.fetchInitialData().subscribe({\n        next: data => {\n          this.classrooms = data.classrooms;\n          this.allWards = data.allWards;\n          this.isLoading = false;\n        },\n        error: error => {\n          console.error(\"Failed to fetch initial data:\", error);\n          this.handleLogout();\n          this.isLoading = false;\n        }\n      });\n    }\n    updateClassroomState(updatedClassroom) {\n      const index = this.classrooms.findIndex(c => c.id === updatedClassroom.id);\n      if (index > -1) {\n        this.classrooms[index] = updatedClassroom;\n        this.classrooms = [...this.classrooms];\n      }\n    }\n    handleLogin({\n      name,\n      pass\n    }) {\n      this.apiService.login(name, pass).subscribe({\n        next: ({\n          user\n        }) => {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUser = user;\n          this.fetchData();\n        },\n        error: error => {\n          console.error(error);\n          alert(error.message || 'Login failed.');\n        }\n      });\n    }\n    handleRegister({\n      name,\n      pass,\n      role\n    }) {\n      this.apiService.register(name, pass, role).subscribe({\n        next: ({\n          user\n        }) => {\n          localStorage.setItem('user', JSON.stringify(user));\n          this.currentUser = user;\n          if (role === UserRole.Ward) {\n            this.allWards = [...this.allWards, user];\n          }\n          this.fetchData();\n        },\n        error: error => {\n          console.error(error);\n          alert(error.message || 'Registration failed.');\n        }\n      });\n    }\n    handleLogout() {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      this.currentUser = null;\n      this.selectedClassroomId = null;\n      this.classrooms = [];\n      this.allWards = [];\n    }\n    setSelectedClassroomId(id) {\n      this.selectedClassroomId = id;\n    }\n    handleCreateClassroom({\n      name,\n      description\n    }) {\n      this.apiService.createClassroom(name, description).subscribe({\n        next: newClassroom => {\n          this.classrooms = [...this.classrooms, newClassroom];\n        },\n        error: error => {\n          console.error(error);\n          alert(error.message || 'Failed to create classroom.');\n        }\n      });\n    }\n    handleJoinClassroom(code) {\n      this.apiService.joinClassroom(code).subscribe({\n        next: () => {\n          alert(\"Join request sent to the tutor for approval.\");\n          this.fetchData(); // Refresh data to see pending request if applicable\n        },\n\n        error: error => {\n          console.error(error);\n          alert(error.message || 'Failed to join classroom.');\n        }\n      });\n    }\n    handleApproveRequest(wardId) {\n      if (this.selectedClassroomId) {\n        this.apiService.approveJoinRequest(this.selectedClassroomId, wardId).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleQuizCreated(quizData) {\n      if (this.selectedClassroomId) {\n        this.apiService.addQuizToClassroom(this.selectedClassroomId, quizData).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleAssignmentCreated(assignmentData) {\n      if (this.selectedClassroomId) {\n        this.apiService.addAssignmentToClassroom(this.selectedClassroomId, assignmentData).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleQuizCompleted({\n      quizId,\n      submission\n    }) {\n      if (this.selectedClassroomId) {\n        this.apiService.submitQuiz(this.selectedClassroomId, quizId, submission).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleAssignmentSubmitted({\n      assignmentId,\n      submission\n    }) {\n      if (this.selectedClassroomId) {\n        this.apiService.submitAssignment(this.selectedClassroomId, assignmentId, submission).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleGradeAssignment({\n      assignmentId,\n      wardId,\n      grade,\n      feedback\n    }) {\n      if (this.selectedClassroomId) {\n        this.apiService.gradeAssignment(this.selectedClassroomId, assignmentId, wardId, grade, feedback).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    handleUpdateAttendance(record) {\n      if (this.selectedClassroomId) {\n        this.apiService.updateAttendance(this.selectedClassroomId, record).subscribe({\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\n          error: error => console.error(error)\n        });\n      }\n    }\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 5,\n      vars: 3,\n      consts: [[1, \"min-h-screen\", \"bg-slate-50\", \"dark:bg-slate-900\", \"text-slate-900\", \"dark:text-slate-200\", \"font-sans\"], [3, \"isAuthenticated\", \"logout\"], [1, \"container\", \"mx-auto\", \"p-4\", \"sm:p-6\", \"lg:p-8\"], [\"class\", \"flex justify-center items-center h-screen\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"flex\", \"justify-center\", \"items-center\", \"h-screen\"], [3, \"className\"], [3, \"login\", \"register\", 4, \"ngIf\"], [3, \"login\", \"register\"], [\"class\", \"flex justify-center items-center h-[calc(100vh-10rem)]\", 4, \"ngIf\"], [1, \"flex\", \"justify-center\", \"items-center\", \"h-[calc(100vh-10rem)]\"], [3, \"classrooms\", \"currentUser\", \"selectClassroom\", \"createClassroom\", \"joinClassroom\", 4, \"ngIf\"], [3, \"classroom\", \"allWards\", \"back\", \"quizCreated\", \"assignmentCreated\", \"updateAttendance\", \"approveRequest\", \"gradeAssignment\", 4, \"ngIf\"], [3, \"classroom\", \"currentUser\", \"quizCompleted\", \"assignmentSubmitted\", \"back\", 4, \"ngIf\"], [3, \"classrooms\", \"currentUser\", \"selectClassroom\", \"createClassroom\", \"joinClassroom\"], [3, \"classroom\", \"allWards\", \"back\", \"quizCreated\", \"assignmentCreated\", \"updateAttendance\", \"approveRequest\", \"gradeAssignment\"], [3, \"classroom\", \"currentUser\", \"quizCompleted\", \"assignmentSubmitted\", \"back\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"app-header\", 1);\n          i0.ɵɵlistener(\"logout\", function AppComponent_Template_app_header_logout_1_listener() {\n            return ctx.handleLogout();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"main\", 2);\n          i0.ɵɵtemplate(3, AppComponent_div_3_Template, 2, 1, \"div\", 3);\n          i0.ɵɵtemplate(4, AppComponent_ng_container_4_Template, 3, 2, \"ng-container\", 4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"isAuthenticated\", !!ctx.currentUser);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAuthLoading);\n        }\n      },\n      dependencies: [CommonModule, i2.NgIf, HeaderComponent, LoginPageComponent, SpinnerIconComponent, ClassroomListComponent, TutorDashboardComponent, WardDashboardComponent],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();","map":{"version":3,"mappings":"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","names":["CommonModule","UserRole","HeaderComponent","LoginPageComponent","SpinnerIconComponent","ClassroomListComponent","TutorDashboardComponent","WardDashboardComponent","i0","AppComponent","apiService","currentUser","classrooms","allWards","selectedClassroomId","isLoading","isAuthLoading","userRoleEnum","constructor","ngOnInit","token","localStorage","getItem","user","JSON","parse","e","handleLogout","fetchData","selectedClassroom","find","c","id","fetchInitialData","subscribe","next","data","error","console","updateClassroomState","updatedClassroom","index","findIndex","handleLogin","name","pass","login","setItem","stringify","alert","message","handleRegister","role","register","Ward","removeItem","setSelectedClassroomId","handleCreateClassroom","description","createClassroom","newClassroom","handleJoinClassroom","code","joinClassroom","handleApproveRequest","wardId","approveJoinRequest","handleQuizCreated","quizData","addQuizToClassroom","handleAssignmentCreated","assignmentData","addAssignmentToClassroom","handleQuizCompleted","quizId","submission","submitQuiz","handleAssignmentSubmitted","assignmentId","submitAssignment","handleGradeAssignment","grade","feedback","gradeAssignment","handleUpdateAttendance","record","updateAttendance","selectors","standalone","features","decls","vars","consts","template","ctx","encapsulation"],"sourceRoot":"","sources":["D:\\learning-portal\\frontend\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  Classroom, User, UserRole, Quiz, Assignment,\r\n  WardSubmission, AssignmentSubmission, AttendanceRecord\r\n} from './types';\r\nimport { ApiService } from './services/api.service';\r\n\r\n// Components\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { LoginPageComponent } from './components/login-page/login-page.component';\r\nimport { SpinnerIconComponent } from './components/icons/spinner-icon.component';\r\nimport { ClassroomListComponent } from './components/classroom-list/classroom-list.component';\r\nimport { TutorDashboardComponent } from './components/tutor-dashboard/tutor-dashboard.component';\r\nimport { WardDashboardComponent } from './components/ward-dashboard/ward-dashboard.component';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    HeaderComponent,\r\n    LoginPageComponent,\r\n    SpinnerIconComponent,\r\n    ClassroomListComponent,\r\n    TutorDashboardComponent,\r\n    WardDashboardComponent\r\n  ],\r\n  template: `\r\n    <div class=\"min-h-screen bg-slate-50 dark:bg-slate-900 text-slate-900 dark:text-slate-200 font-sans\">\r\n      <app-header [isAuthenticated]=\"!!currentUser\" (logout)=\"handleLogout()\"></app-header>\r\n      <main class=\"container mx-auto p-4 sm:p-6 lg:p-8\">\r\n        <div *ngIf=\"isAuthLoading\" class=\"flex justify-center items-center h-screen\">\r\n          <app-spinner-icon [className]=\"'w-10 h-10'\"></app-spinner-icon>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"!isAuthLoading\">\r\n          <app-login-page *ngIf=\"!currentUser\" (login)=\"handleLogin($event)\" (register)=\"handleRegister($event)\"></app-login-page>\r\n          \r\n          <ng-container *ngIf=\"currentUser\">\r\n            <div *ngIf=\"isLoading\" class=\"flex justify-center items-center h-[calc(100vh-10rem)]\">\r\n              <app-spinner-icon [className]=\"'w-10 h-10'\"></app-spinner-icon>\r\n            </div>\r\n\r\n            <ng-container *ngIf=\"!isLoading\">\r\n              <app-classroom-list \r\n                *ngIf=\"!selectedClassroom\"\r\n                [classrooms]=\"classrooms\"\r\n                [currentUser]=\"currentUser\"\r\n                (selectClassroom)=\"setSelectedClassroomId($event)\"\r\n                (createClassroom)=\"handleCreateClassroom($event)\"\r\n                (joinClassroom)=\"handleJoinClassroom($event)\">\r\n              </app-classroom-list>\r\n              \r\n              <app-tutor-dashboard\r\n                *ngIf=\"selectedClassroom && currentUser.role === userRoleEnum.Tutor\"\r\n                [classroom]=\"selectedClassroom\"\r\n                [allWards]=\"allWards\"\r\n                (back)=\"setSelectedClassroomId(null)\"\r\n                (quizCreated)=\"handleQuizCreated($event)\"\r\n                (assignmentCreated)=\"handleAssignmentCreated($event)\"\r\n                (updateAttendance)=\"handleUpdateAttendance($event)\"\r\n                (approveRequest)=\"handleApproveRequest($event)\"\r\n                (gradeAssignment)=\"handleGradeAssignment($event)\">\r\n              </app-tutor-dashboard>\r\n              \r\n              <app-ward-dashboard\r\n                *ngIf=\"selectedClassroom && currentUser.role === userRoleEnum.Ward\"\r\n                [classroom]=\"selectedClassroom\"\r\n                [currentUser]=\"currentUser\"\r\n                (quizCompleted)=\"handleQuizCompleted($event)\"\r\n                (assignmentSubmitted)=\"handleAssignmentSubmitted($event)\"\r\n                (back)=\"setSelectedClassroomId(null)\">\r\n              </app-ward-dashboard>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n      </main>\r\n    </div>\r\n  `,\r\n})\r\nexport class AppComponent implements OnInit {\r\n  currentUser: User | null = null;\r\n  classrooms: Classroom[] = [];\r\n  allWards: User[] = [];\r\n  selectedClassroomId: string | null = null;\r\n  isLoading = false;\r\n  isAuthLoading = true;\r\n  userRoleEnum = UserRole;\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  ngOnInit(): void {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    if (token && user) {\r\n        try {\r\n            this.currentUser = JSON.parse(user);\r\n        } catch (e) {\r\n            this.handleLogout();\r\n        }\r\n    }\r\n    this.isAuthLoading = false;\r\n    if (this.currentUser) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  get selectedClassroom(): Classroom | undefined {\r\n    return this.classrooms.find(c => c.id === this.selectedClassroomId);\r\n  }\r\n\r\n  fetchData(): void {\r\n    this.isLoading = true;\r\n    this.apiService.fetchInitialData().subscribe({\r\n        next: data => {\r\n            this.classrooms = data.classrooms;\r\n            this.allWards = data.allWards;\r\n            this.isLoading = false;\r\n        },\r\n        error: error => {\r\n            console.error(\"Failed to fetch initial data:\", error);\r\n            this.handleLogout();\r\n            this.isLoading = false;\r\n        }\r\n    });\r\n  }\r\n\r\n  private updateClassroomState(updatedClassroom: Classroom): void {\r\n    const index = this.classrooms.findIndex(c => c.id === updatedClassroom.id);\r\n    if (index > -1) {\r\n      this.classrooms[index] = updatedClassroom;\r\n      this.classrooms = [...this.classrooms];\r\n    }\r\n  }\r\n\r\n  handleLogin({ name, pass }: { name: string, pass: string }): void {\r\n    this.apiService.login(name, pass).subscribe({\r\n      next: ({ user }) => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.currentUser = user;\r\n        this.fetchData();\r\n      },\r\n      error: error => {\r\n        console.error(error);\r\n        alert(error.message || 'Login failed.');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRegister({ name, pass, role }: { name: string, pass: string, role: UserRole }): void {\r\n    this.apiService.register(name, pass, role).subscribe({\r\n      next: ({ user }) => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        this.currentUser = user;\r\n        if (role === UserRole.Ward) {\r\n          this.allWards = [...this.allWards, user];\r\n        }\r\n        this.fetchData();\r\n      },\r\n      error: error => {\r\n        console.error(error);\r\n        alert(error.message || 'Registration failed.');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleLogout(): void {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      this.currentUser = null;\r\n      this.selectedClassroomId = null;\r\n      this.classrooms = [];\r\n      this.allWards = [];\r\n  }\r\n\r\n  setSelectedClassroomId(id: string | null): void {\r\n    this.selectedClassroomId = id;\r\n  }\r\n\r\n  handleCreateClassroom({ name, description }: { name: string, description: string }): void {\r\n    this.apiService.createClassroom(name, description).subscribe({\r\n      next: newClassroom => {\r\n        this.classrooms = [...this.classrooms, newClassroom];\r\n      },\r\n      error: error => {\r\n        console.error(error);\r\n        alert(error.message || 'Failed to create classroom.');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleJoinClassroom(code: string): void {\r\n    this.apiService.joinClassroom(code).subscribe({\r\n      next: () => {\r\n        alert(\"Join request sent to the tutor for approval.\");\r\n        this.fetchData(); // Refresh data to see pending request if applicable\r\n      },\r\n      error: error => {\r\n        console.error(error);\r\n        alert(error.message || 'Failed to join classroom.');\r\n      }\r\n    });\r\n  }\r\n\r\n  handleApproveRequest(wardId: string): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.approveJoinRequest(this.selectedClassroomId, wardId).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleQuizCreated(quizData: Omit<Quiz, 'id' | 'submissions'>): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.addQuizToClassroom(this.selectedClassroomId, quizData).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleAssignmentCreated(assignmentData: Omit<Assignment, 'id'|'submissions'>): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.addAssignmentToClassroom(this.selectedClassroomId, assignmentData).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleQuizCompleted({ quizId, submission }: { quizId: string, submission: Omit<WardSubmission, 'wardId'> }): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.submitQuiz(this.selectedClassroomId, quizId, submission).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n\r\n  handleAssignmentSubmitted({ assignmentId, submission }: { assignmentId: string, submission: Omit<AssignmentSubmission, 'wardId'> }): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.submitAssignment(this.selectedClassroomId, assignmentId, submission).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleGradeAssignment({ assignmentId, wardId, grade, feedback }: { assignmentId: string, wardId: string, grade: number, feedback: string }): void {\r\n      if (this.selectedClassroomId) {\r\n        this.apiService.gradeAssignment(this.selectedClassroomId, assignmentId, wardId, grade, feedback).subscribe({\r\n          next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n          error: error => console.error(error)\r\n        });\r\n      }\r\n  }\r\n\r\n  handleUpdateAttendance(record: AttendanceRecord): void {\r\n    if (this.selectedClassroomId) {\r\n      this.apiService.updateAttendance(this.selectedClassroomId, record).subscribe({\r\n        next: updatedClassroom => this.updateClassroomState(updatedClassroom),\r\n        error: error => console.error(error)\r\n      });\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}